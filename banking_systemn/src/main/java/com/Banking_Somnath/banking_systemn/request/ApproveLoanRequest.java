package com.Banking_Somnath.banking_systemn.request;

// Add validation later: @NotNull, @DecimalMin
// import jakarta.validation.constraints.*;

public class ApproveLoanRequest {

    // @NotNull(message = "Approved amount is required")
    // @DecimalMin(value = "1.00", message = "Approved amount must be positive")
    private Double approvedAmount;

    // @NotNull(message = "Interest rate is required")
    // @DecimalMin(value = "0.1", message = "Interest rate must be positive") // e.g., 0.1% minimum
    // @DecimalMax(value = "30.0", message = "Interest rate seems too high (max 30%)") // Example limit
    private Double interestRate;

    // Getters and Setters (Generated by IDE)

    public Double getApprovedAmount() {
        return approvedAmount;
    }

    public void setApprovedAmount(Double approvedAmount) {
        this.approvedAmount = approvedAmount;
    }

    public Double getInterestRate() {
        return interestRate;
    }

    public void setInterestRate(Double interestRate) {
        this.interestRate = interestRate;
    }
}