{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\CheckBalance.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/CheckBalance.js --- (Or src/pages/CustomerTransaction/CheckBalancePage.js)\nimport React, { useState } from 'react';\nimport axios from 'axios';\n// Import MUI components\nimport { Container, Paper, Typography, Button, Box, CircularProgress, Alert } from '@mui/material';\n\n// Backend API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nconst CheckBalancePage = () => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(''); // Stores error or success messages\n\n  const handleCheckBalance = async () => {\n    setIsLoading(true);\n    setBalance(null);\n    setMessage('');\n    try {\n      var _response$data, _response$data2;\n      // Make GET request to the backend endpoint\n      const response = await axios.get(`${API_BASE_URL}/check-balance`, {\n        withCredentials: true // Send authentication cookies/headers\n      });\n      console.log(\"Check Balance Response:\", response.data);\n\n      // Check success flag and presence of balance field\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) === true && ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.balance) !== undefined) {\n        setBalance(response.data.balance);\n        setMessage(`Balance fetched successfully!`); // Optional success message\n      } else {\n        var _response$data3;\n        setMessage(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.message) || \"Failed to retrieve balance.\");\n        setBalance(null);\n      }\n    } catch (error) {\n      console.error('Error checking balance:', error);\n      setBalance(null);\n      if (error.response) {\n        const errorData = error.response.data;\n        setMessage((errorData === null || errorData === void 0 ? void 0 : errorData.message) || `Error: ${error.response.status}. Please ensure you are logged in.`);\n      } else if (error.request) {\n        setMessage(\"Network error. Could not reach the server.\");\n      } else {\n        setMessage(\"An unexpected error occurred while checking balance.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Automatically fetch balance when the page loads (optional)\n  // useEffect(() => {\n  //     handleCheckBalance();\n  // }, []); // Empty array means run once on mount\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Check Account Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 3,\n          minHeight: '50px',\n          textAlign: 'center',\n          width: '100%'\n        },\n        children: [isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this), !isLoading && balance !== null && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: [\"Current Balance: \\u20B9\", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), !isLoading && balance === null && !message && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"Click the button below to view your current balance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), message && !isLoading && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: balance !== null ? \"success\" : \"error\",\n        sx: {\n          width: '100%',\n          mb: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleCheckBalance,\n        disabled: isLoading,\n        fullWidth: true,\n        size: \"large\",\n        sx: {\n          mt: 1\n        } // Add some margin top\n        ,\n        children: isLoading ? 'Checking...' : 'Check / Refresh Balance'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckBalancePage, \"WugL8MBjLEjTI4HmfNPJKQr7awg=\");\n_c = CheckBalancePage;\nexport default CheckBalancePage;\nvar _c;\n$RefreshReg$(_c, \"CheckBalancePage\");","map":{"version":3,"names":["React","useState","axios","Container","Paper","Typography","Button","Box","CircularProgress","Alert","jsxDEV","_jsxDEV","API_BASE_URL","CheckBalancePage","_s","balance","setBalance","isLoading","setIsLoading","message","setMessage","handleCheckBalance","_response$data","_response$data2","response","get","withCredentials","console","log","data","success","undefined","_response$data3","error","errorData","status","request","maxWidth","sx","mt","children","elevation","p","display","flexDirection","alignItems","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","my","minHeight","textAlign","width","color","fontWeight","severity","mb","onClick","disabled","fullWidth","size","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/CheckBalance.js"],"sourcesContent":["// --- src/component/Page/CheckBalance.js --- (Or src/pages/CustomerTransaction/CheckBalancePage.js)\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n// Import MUI components\r\nimport { Container, Paper, Typography, Button, Box, CircularProgress, Alert } from '@mui/material';\r\n\r\n// Backend API URL\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\nconst CheckBalancePage = () => {\r\n    const [balance, setBalance] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState(''); // Stores error or success messages\r\n\r\n    const handleCheckBalance = async () => {\r\n        setIsLoading(true);\r\n        setBalance(null);\r\n        setMessage('');\r\n\r\n        try {\r\n            // Make GET request to the backend endpoint\r\n            const response = await axios.get(`${API_BASE_URL}/check-balance`, {\r\n                withCredentials: true // Send authentication cookies/headers\r\n            });\r\n\r\n            console.log(\"Check Balance Response:\", response.data);\r\n\r\n            // Check success flag and presence of balance field\r\n            if (response.data?.success === true && response.data?.balance !== undefined) {\r\n                setBalance(response.data.balance);\r\n                setMessage(`Balance fetched successfully!`); // Optional success message\r\n            } else {\r\n                setMessage(response.data?.message || \"Failed to retrieve balance.\");\r\n                setBalance(null);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking balance:', error);\r\n            setBalance(null);\r\n            if (error.response) {\r\n                 const errorData = error.response.data;\r\n                 setMessage(errorData?.message || `Error: ${error.response.status}. Please ensure you are logged in.`);\r\n            } else if (error.request) {\r\n                setMessage(\"Network error. Could not reach the server.\");\r\n            } else {\r\n                setMessage(\"An unexpected error occurred while checking balance.\");\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Automatically fetch balance when the page loads (optional)\r\n    // useEffect(() => {\r\n    //     handleCheckBalance();\r\n    // }, []); // Empty array means run once on mount\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n            <Paper elevation={3} sx={{ p: 3, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Check Account Balance\r\n                </Typography>\r\n\r\n                {/* Display Area for Balance or Loading */}\r\n                <Box sx={{ my: 3, minHeight: '50px', textAlign: 'center', width: '100%' }}>\r\n                    {isLoading && <CircularProgress />}\r\n                    {!isLoading && balance !== null && (\r\n                        <Typography variant=\"h5\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\r\n                           Current Balance: â‚¹{balance}\r\n                        </Typography>\r\n                    )}\r\n                    {/* Show message if balance hasn't been loaded yet */}\r\n                    {!isLoading && balance === null && !message && (\r\n                         <Typography variant=\"body1\" color=\"text.secondary\">\r\n                             Click the button below to view your current balance.\r\n                         </Typography>\r\n                    )}\r\n                </Box>\r\n\r\n                {/* Display Error/Success Message */}\r\n                {message && !isLoading && (\r\n                    <Alert severity={balance !== null ? \"success\" : \"error\"} sx={{ width: '100%', mb: 2 }}>\r\n                        {message}\r\n                    </Alert>\r\n                )}\r\n\r\n                {/* Button to Trigger Balance Check */}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleCheckBalance}\r\n                    disabled={isLoading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    sx={{ mt: 1 }} // Add some margin top\r\n                >\r\n                    {isLoading ? 'Checking...' : 'Check / Refresh Balance'}\r\n                </Button>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CheckBalancePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}