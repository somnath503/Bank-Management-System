{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// --- src/App.js ---\nimport React from 'react'; // Keep React import\nimport { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom'; // Keep needed imports\nimport { useAuth } from './context/AuthContext'; // <<< Import useAuth hook\n\n// Common Components\nimport Navbar from './component/common/Navbar.js';\n\n// Page Components (Adjust imports based on your final file names/locations)\nimport HomePage from './pages/HomePage'; // Assuming Home.js moved to pages/\nimport LoginPage from './pages/LoginPage'; // Assuming Customer_Dash.js moved/renamed\nimport RegistrationPage from './pages/RegistrationPage'; // Assuming Registration.js moved/renamed\n\n// Customer Pages (Protected) - Assuming Header.js is the customer dashboard for now\nimport Header from './component/Page/Header.js'; // Keep original path if not moved yet\nimport DepositPage from './component/Page/Deposit.js'; // Keep original path if not moved yet\nimport WithdrawPage from './component/Page/Withdraw.js'; // Keep original path if not moved yet\nimport TransferPage from './component/Page/TransferMoney.js'; // Keep original path if not moved yet\nimport CheckBalancePage from './component/Page/CheckBalance.js'; // Keep original path if not moved yet\n\n// Admin Pages (Protected) - Adjust paths based on where you created them\nimport AdminDashboardPage from './pages/Admin/AdminDashboard'; // Use correct path\nimport PendingApprovalsPage from './pages/Admin/PendingApprovalsPage'; // Use correct path\n\n// Employee Pages (Example - Placeholder)\n// import EmployeeDashboardPage from './pages/Employee/EmployeeDashboardPage';\n\n// Styles (Keep if using separate CSS)\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n\n// --- Correct ProtectedRoute Component (Defined ONCE, outside App) ---\n// Checks for login status and allowed roles using AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const {\n    authState\n  } = useAuth(); // Get auth state from context\n\n  if (!authState.isLoggedIn) {\n    // If not logged in, redirect to the login page\n    // 'replace' prevents adding the protected route to browser history\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check if roles are required and if the user has one of the allowed roles\n  if (allowedRoles && allowedRoles.length > 0 && !allowedRoles.includes(authState.userRole)) {\n    // Logged in, but doesn't have permission\n    console.warn(`Access Denied: Route requires roles [${allowedRoles.join(', ')}], user has role '${authState.userRole}'`);\n    // Redirect to an \"Unauthorized\" page or home page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If logged in AND has the required role (or no specific role needed for this route),\n  // render the nested routes via the Outlet component.\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_s(ProtectedRoute, \"ToNw9tHl2DYR4fuM+DMH3fSkE+A=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nfunction App() {\n  _s2();\n  // *** REMOVE Local isLoggedIn state - Use AuthContext ***\n  // const [isLoggedIn , setIsLoggedIn] = useState(!!localStorage.getItem('jwtToken'));\n  // const [useEffect... ] block related to local isLoggedIn\n\n  const {\n    authState\n  } = useAuth(); // Get global auth state\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\"\n        // If already logged in, redirect away from login page\n        ,\n        element: authState.isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 83\n        }, this)\n        // Pass login function from context to LoginPage if needed,\n        // but LoginPage should import and use useAuth() itself.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegistrationPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/unauthorized\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"403 - Unauthorized Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You do not have permission to view this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 142\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_EMPLOYEE']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this),\n        children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/header\",\n          element: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit\",\n          element: /*#__PURE__*/_jsxDEV(DepositPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw\",\n          element: /*#__PURE__*/_jsxDEV(WithdrawPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transfer\",\n          element: /*#__PURE__*/_jsxDEV(TransferPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/check-balance\",\n          element: /*#__PURE__*/_jsxDEV(CheckBalancePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: ['ROLE_ADMIN']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(AdminDashboardPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/pending\",\n          element: /*#__PURE__*/_jsxDEV(PendingApprovalsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"404 - Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"ToNw9tHl2DYR4fuM+DMH3fSkE+A=\", false, function () {\n  return [useAuth];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Outlet","useAuth","Navbar","HomePage","LoginPage","RegistrationPage","Header","DepositPage","WithdrawPage","TransferPage","CheckBalancePage","AdminDashboardPage","PendingApprovalsPage","jsxDEV","_jsxDEV","ProtectedRoute","allowedRoles","_s","authState","isLoggedIn","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","userRole","console","warn","join","_c","App","_s2","children","path","element","style","padding","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/App.js"],"sourcesContent":["// --- src/App.js ---\nimport React from 'react'; // Keep React import\nimport { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom'; // Keep needed imports\nimport { useAuth } from './context/AuthContext'; // <<< Import useAuth hook\n\n// Common Components\nimport Navbar from './component/common/Navbar.js';\n\n// Page Components (Adjust imports based on your final file names/locations)\nimport HomePage from './pages/HomePage';          // Assuming Home.js moved to pages/\nimport LoginPage from './pages/LoginPage';        // Assuming Customer_Dash.js moved/renamed\nimport RegistrationPage from './pages/RegistrationPage'; // Assuming Registration.js moved/renamed\n\n// Customer Pages (Protected) - Assuming Header.js is the customer dashboard for now\nimport Header from './component/Page/Header.js'; // Keep original path if not moved yet\nimport DepositPage from './component/Page/Deposit.js'; // Keep original path if not moved yet\nimport WithdrawPage from './component/Page/Withdraw.js'; // Keep original path if not moved yet\nimport TransferPage from './component/Page/TransferMoney.js'; // Keep original path if not moved yet\nimport CheckBalancePage from './component/Page/CheckBalance.js'; // Keep original path if not moved yet\n\n// Admin Pages (Protected) - Adjust paths based on where you created them\nimport AdminDashboardPage from './pages/Admin/AdminDashboard';        // Use correct path\nimport PendingApprovalsPage from './pages/Admin/PendingApprovalsPage'; // Use correct path\n\n// Employee Pages (Example - Placeholder)\n// import EmployeeDashboardPage from './pages/Employee/EmployeeDashboardPage';\n\n// Styles (Keep if using separate CSS)\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n\n// --- Correct ProtectedRoute Component (Defined ONCE, outside App) ---\n// Checks for login status and allowed roles using AuthContext\nconst ProtectedRoute = ({ allowedRoles }) => {\n    const { authState } = useAuth(); // Get auth state from context\n\n    if (!authState.isLoggedIn) {\n        // If not logged in, redirect to the login page\n        // 'replace' prevents adding the protected route to browser history\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Check if roles are required and if the user has one of the allowed roles\n    if (allowedRoles && allowedRoles.length > 0 && !allowedRoles.includes(authState.userRole)) {\n        // Logged in, but doesn't have permission\n        console.warn(`Access Denied: Route requires roles [${allowedRoles.join(', ')}], user has role '${authState.userRole}'`);\n        // Redirect to an \"Unauthorized\" page or home page\n        return <Navigate to=\"/unauthorized\" replace />;\n    }\n\n    // If logged in AND has the required role (or no specific role needed for this route),\n    // render the nested routes via the Outlet component.\n    return <Outlet />;\n};\n\n\nfunction App() {\n    // *** REMOVE Local isLoggedIn state - Use AuthContext ***\n    // const [isLoggedIn , setIsLoggedIn] = useState(!!localStorage.getItem('jwtToken'));\n    // const [useEffect... ] block related to local isLoggedIn\n\n    const { authState } = useAuth(); // Get global auth state\n\n    return (\n        <Router>\n            <Navbar /> {/* Navbar is always visible - needs AuthContext */}\n            <Routes>\n                {/* --- Public Routes --- */}\n                <Route path=\"/\" element={<HomePage />} />\n                <Route\n                    path=\"/login\"\n                    // If already logged in, redirect away from login page\n                    element={authState.isLoggedIn ? <Navigate to=\"/\" replace /> : <LoginPage />}\n                    // Pass login function from context to LoginPage if needed,\n                    // but LoginPage should import and use useAuth() itself.\n                />\n                <Route path=\"/register\" element={<RegistrationPage />} />\n                <Route path=\"/unauthorized\" element={<div style={{ padding: '20px', textAlign: 'center' }}><h2>403 - Unauthorized Access</h2><p>You do not have permission to view this page.</p></div>} />\n\n\n                {/* --- Customer Routes (Protected - requires ROLE_USER or ROLE_ADMIN) --- */}\n                {/* Use parent Route with ProtectedRoute element */}\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_USER', 'ROLE_ADMIN', 'ROLE_EMPLOYEE']} />}> {/* Adjust roles as needed */}\n                    {/* Customer dashboard path */}\n                    <Route path=\"/header\" element={<Header />} /> {/* Assuming Header is the customer dashboard */}\n                    {/* Transaction paths */}\n                    <Route path=\"/deposit\" element={<DepositPage />} />\n                    <Route path=\"/withdraw\" element={<WithdrawPage />} />\n                    <Route path=\"/transfer\" element={<TransferPage />} />\n                    <Route path=\"/check-balance\" element={<CheckBalancePage />} />\n                    {/* Add other customer-specific routes here */}\n                </Route>\n\n\n                {/* --- Admin Routes (Protected - requires ROLE_ADMIN) --- */}\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_ADMIN']} />}>\n                    <Route path=\"/admin/dashboard\" element={<AdminDashboardPage />} />\n                    <Route path=\"/admin/pending\" element={<PendingApprovalsPage />} />\n                    {/* Add other admin routes here */}\n                </Route>\n\n\n                {/* --- Employee Routes (Protected - requires ROLE_EMPLOYEE or ROLE_ADMIN) --- */}\n                {/* Example:\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_EMPLOYEE', 'ROLE_ADMIN']} />}>\n                    <Route path=\"/employee/dashboard\" element={<EmployeeDashboardPage />} />\n                    // Add other employee routes\n                </Route>\n                */}\n\n\n                {/* --- REMOVE Old Public Admin/Employee Routes --- */}\n                {/* <Route path=\"/employee\" element={<Employee_Dash />} /> */}\n                {/* <Route path=\"/admin\" element={<Admin_Dash />} /> */}\n\n\n                {/* Catch-all for 404 Not Found */}\n                <Route path=\"*\" element={<div style={{ padding: '20px', textAlign: 'center' }}><h2>404 - Page Not Found</h2></div>} />\n\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}