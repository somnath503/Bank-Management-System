{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\TransactionHistoryPage.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/Employee/EmployeeDownloadHistoryPage.js ---\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, TextField, Button, Alert, CircularProgress } from '@mui/material';\nimport { useAuth } from '../../../context/AuthContext'; // Adjust path if needed\nimport axios from 'axios';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080'; // Ensure this matches your backend URL\n\nexport default function EmployeeDownloadHistoryPage() {\n  _s();\n  const {\n    authState\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // State for inputs and feedback\n  const [targetCustomerId, setTargetCustomerId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Helper to parse error messages (similar to other pages)\n  const getErrorMessage = err => {\n    let message = 'An unexpected error occurred.';\n    if (err.response) {\n      var _err$response$data2;\n      console.error(\"API Error Response:\", err.response);\n      if (err.response.status === 403) {\n        message = 'Forbidden: You do not have permission for this action.';\n      } else if (err.response.status === 404) {\n        var _err$response$data;\n        message = ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || `Customer '${targetCustomerId}' not found.`;\n      } else if ((_err$response$data2 = err.response.data) !== null && _err$response$data2 !== void 0 && _err$response$data2.message) {\n        message = err.response.data.message; // Use message from backend map {success: false, message: '...'}\n      } else if (typeof err.response.data === 'string') {\n        message = err.response.data;\n      } else {\n        message = `Error: ${err.response.status} ${err.response.statusText}`;\n      }\n    } else if (err.message) {\n      message = err.message;\n    }\n    return message;\n  };\n\n  // Handler for downloading the PDF\n  const handleDownload = async () => {\n    setError('');\n    setSuccessMessage('');\n\n    // Frontend Validation\n    if (!targetCustomerId) {\n      setError('Please enter the Target Customer ID.');\n      return;\n    }\n    if (!startDate || !endDate) {\n      setError('Please select both a start and end date.');\n      return;\n    }\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (start > end) {\n      setError('Start date cannot be after end date.');\n      return;\n    }\n    setLoading(true);\n\n    // Construct URL for the new employee endpoint\n    const downloadUrl = `${API_BASE_URL}/employee/customer/${targetCustomerId}/history/download?startDate=${startDate}&endDate=${endDate}`;\n    console.log(\"Requesting download from (Employee Endpoint):\", downloadUrl);\n    try {\n      var _response$data;\n      const response = await axios.get(downloadUrl, {\n        responseType: 'blob',\n        // Expect binary data\n        withCredentials: true // Send authentication cookies/headers\n      });\n\n      // Check if the response looks like a PDF before proceeding\n      if (response.status === 200 && ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.type) === 'application/pdf') {\n        // Create Blob URL and trigger download\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n\n        // Try to get filename from Content-Disposition header\n        const contentDisposition = response.headers['content-disposition'];\n        let filename = `transaction_history_${targetCustomerId}_${startDate}_to_${endDate}.pdf`; // Default\n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/i); // Case-insensitive match\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        console.log(`Transaction history download initiated for ${targetCustomerId}.`);\n        setSuccessMessage(`Download started successfully for Customer ID: ${targetCustomerId}!`);\n      } else {\n        // Handle cases where the response isn't a PDF (e.g., error JSON returned as blob)\n        console.error(\"Received non-PDF response:\", response);\n        // Attempt to read the blob as text to see if it's an error message\n        const reader = new FileReader();\n        reader.onload = e => {\n          try {\n            // Try parsing as JSON first\n            const errorJson = JSON.parse(e.target.result);\n            setError(errorJson.message || \"Download failed: Received unexpected data.\");\n          } catch (parseError) {\n            // If not JSON, show raw text\n            setError(`Download failed: ${e.target.result || 'Received non-PDF data.'}`);\n          }\n        };\n        reader.onerror = () => setError(\"Download failed: Could not read response data.\");\n        reader.readAsText(response.data);\n      }\n    } catch (err) {\n      console.error(`Error downloading history for ${targetCustomerId}:`, err);\n      // Use the refined error helper\n      setError(getErrorMessage(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Download Customer History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this),\n          onClick: () => navigate('/employee/dashboard') // Link back to dashboard\n          ,\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Enter the Customer ID and date range to download their transaction history.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleDownload();\n        },\n        noValidate: true,\n        children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Target Customer ID\",\n          value: targetCustomerId,\n          onChange: e => {\n            setTargetCustomerId(e.target.value);\n            setError('');\n            setSuccessMessage('');\n          },\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Date\",\n          type: \"date\",\n          value: startDate,\n          onChange: e => {\n            setStartDate(e.target.value);\n            setError('');\n            setSuccessMessage('');\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Date\",\n          type: \"date\",\n          value: endDate,\n          onChange: e => {\n            setEndDate(e.target.value);\n            setError('');\n            setSuccessMessage('');\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          required: true,\n          margin: \"normal\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            width: '100%',\n            mt: 2,\n            mb: 1\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 26\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            width: '100%',\n            mt: 2,\n            mb: 1\n          },\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\" // Use submit type for form\n          ,\n          variant: \"contained\",\n          color: \"primary\"\n          // onClick={handleDownload} // onClick removed, handled by form onSubmit\n          ,\n          disabled: loading || !targetCustomerId || !startDate || !endDate,\n          fullWidth: true,\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 95\n          }, this),\n          children: loading ? 'Generating...' : 'Download PDF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeDownloadHistoryPage, \"D+oXdBEhhBoxuq8g6n8eU6HAN2g=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = EmployeeDownloadHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDownloadHistoryPage\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Box","TextField","Button","Alert","CircularProgress","useAuth","axios","DownloadIcon","useNavigate","ArrowBackIcon","jsxDEV","_jsxDEV","API_BASE_URL","EmployeeDownloadHistoryPage","_s","authState","navigate","targetCustomerId","setTargetCustomerId","startDate","setStartDate","endDate","setEndDate","error","setError","loading","setLoading","successMessage","setSuccessMessage","getErrorMessage","err","message","response","_err$response$data2","console","status","_err$response$data","data","statusText","handleDownload","start","Date","end","downloadUrl","log","_response$data","get","responseType","withCredentials","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","contentDisposition","headers","filename","filenameMatch","match","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","reader","FileReader","onload","e","errorJson","JSON","parse","target","result","parseError","onerror","readAsText","maxWidth","sx","mt","mb","children","elevation","p","display","justifyContent","alignItems","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","size","startIcon","onClick","color","onSubmit","preventDefault","noValidate","label","value","onChange","fullWidth","required","margin","disabled","InputLabelProps","shrink","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/TransactionHistoryPage.js"],"sourcesContent":["// --- src/component/Page/Employee/EmployeeDownloadHistoryPage.js ---\r\nimport React, { useState } from 'react';\r\nimport { Container, Paper, Typography, Box, TextField, Button, Alert, CircularProgress } from '@mui/material';\r\nimport { useAuth } from '../../../context/AuthContext'; // Adjust path if needed\r\nimport axios from 'axios';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080'; // Ensure this matches your backend URL\r\n\r\nexport default function EmployeeDownloadHistoryPage() {\r\n    const { authState } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    // State for inputs and feedback\r\n    const [targetCustomerId, setTargetCustomerId] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n     // Helper to parse error messages (similar to other pages)\r\n     const getErrorMessage = (err) => {\r\n         let message = 'An unexpected error occurred.';\r\n         if (err.response) {\r\n             console.error(\"API Error Response:\", err.response);\r\n             if (err.response.status === 403) {\r\n                 message = 'Forbidden: You do not have permission for this action.';\r\n             } else if (err.response.status === 404) {\r\n                 message = err.response.data?.message || `Customer '${targetCustomerId}' not found.`;\r\n             } else if (err.response.data?.message) {\r\n                 message = err.response.data.message; // Use message from backend map {success: false, message: '...'}\r\n             } else if (typeof err.response.data === 'string') {\r\n                 message = err.response.data;\r\n             } else {\r\n                  message = `Error: ${err.response.status} ${err.response.statusText}`;\r\n             }\r\n         } else if (err.message) {\r\n             message = err.message;\r\n         }\r\n         return message;\r\n     };\r\n\r\n    // Handler for downloading the PDF\r\n    const handleDownload = async () => {\r\n        setError('');\r\n        setSuccessMessage('');\r\n\r\n        // Frontend Validation\r\n        if (!targetCustomerId) {\r\n            setError('Please enter the Target Customer ID.');\r\n            return;\r\n        }\r\n        if (!startDate || !endDate) {\r\n            setError('Please select both a start and end date.');\r\n            return;\r\n        }\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        if (start > end) {\r\n            setError('Start date cannot be after end date.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        // Construct URL for the new employee endpoint\r\n        const downloadUrl = `${API_BASE_URL}/employee/customer/${targetCustomerId}/history/download?startDate=${startDate}&endDate=${endDate}`;\r\n        console.log(\"Requesting download from (Employee Endpoint):\", downloadUrl);\r\n\r\n        try {\r\n            const response = await axios.get(downloadUrl, {\r\n                responseType: 'blob', // Expect binary data\r\n                withCredentials: true // Send authentication cookies/headers\r\n            });\r\n\r\n            // Check if the response looks like a PDF before proceeding\r\n            if (response.status === 200 && response.data?.type === 'application/pdf') {\r\n                // Create Blob URL and trigger download\r\n                const blob = new Blob([response.data], { type: 'application/pdf' });\r\n                const url = window.URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n\r\n                // Try to get filename from Content-Disposition header\r\n                const contentDisposition = response.headers['content-disposition'];\r\n                let filename = `transaction_history_${targetCustomerId}_${startDate}_to_${endDate}.pdf`; // Default\r\n                if (contentDisposition) {\r\n                    const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/i); // Case-insensitive match\r\n                    if (filenameMatch && filenameMatch[1]) {\r\n                        filename = filenameMatch[1];\r\n                    }\r\n                }\r\n\r\n                link.setAttribute('download', filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                window.URL.revokeObjectURL(url);\r\n                console.log(`Transaction history download initiated for ${targetCustomerId}.`);\r\n                setSuccessMessage(`Download started successfully for Customer ID: ${targetCustomerId}!`);\r\n\r\n            } else {\r\n                // Handle cases where the response isn't a PDF (e.g., error JSON returned as blob)\r\n                console.error(\"Received non-PDF response:\", response);\r\n                // Attempt to read the blob as text to see if it's an error message\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                     try { // Try parsing as JSON first\r\n                          const errorJson = JSON.parse(e.target.result);\r\n                          setError(errorJson.message || \"Download failed: Received unexpected data.\");\r\n                     } catch (parseError) { // If not JSON, show raw text\r\n                           setError(`Download failed: ${e.target.result || 'Received non-PDF data.'}`);\r\n                     }\r\n                }\r\n                reader.onerror = () => setError(\"Download failed: Could not read response data.\");\r\n                reader.readAsText(response.data);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(`Error downloading history for ${targetCustomerId}:`, err);\r\n            // Use the refined error helper\r\n            setError(getErrorMessage(err));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper elevation={3} sx={{ p: 4 }}>\r\n                 <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                      <Typography variant=\"h5\" component=\"h1\" gutterBottom>\r\n                         Download Customer History\r\n                     </Typography>\r\n                     <Button\r\n                         variant=\"outlined\"\r\n                         size=\"small\"\r\n                         startIcon={<ArrowBackIcon />}\r\n                         onClick={() => navigate('/employee/dashboard')} // Link back to dashboard\r\n                     >\r\n                         Dashboard\r\n                     </Button>\r\n                 </Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                    Enter the Customer ID and date range to download their transaction history.\r\n                </Typography>\r\n\r\n                 <Box component=\"form\" onSubmit={(e) => { e.preventDefault(); handleDownload(); }} noValidate> {/* Wrap in form for Enter key submission */}\r\n                    <TextField\r\n                        label=\"Target Customer ID\"\r\n                        value={targetCustomerId}\r\n                        onChange={(e) => { setTargetCustomerId(e.target.value); setError(''); setSuccessMessage(''); }}\r\n                        fullWidth\r\n                        required\r\n                        margin=\"normal\"\r\n                        disabled={loading}\r\n                    />\r\n                     <TextField\r\n                        label=\"Start Date\"\r\n                        type=\"date\"\r\n                        value={startDate}\r\n                        onChange={(e) => { setStartDate(e.target.value); setError(''); setSuccessMessage(''); }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                        margin=\"normal\"\r\n                        disabled={loading}\r\n                    />\r\n                    <TextField\r\n                        label=\"End Date\"\r\n                        type=\"date\"\r\n                        value={endDate}\r\n                        onChange={(e) => { setEndDate(e.target.value); setError(''); setSuccessMessage(''); }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                        margin=\"normal\"\r\n                        disabled={loading}\r\n                    />\r\n\r\n                     {/* Display Error/Success Messages */}\r\n                     {error && (\r\n                         <Alert severity=\"error\" sx={{ width: '100%', mt: 2, mb: 1 }}>\r\n                             {error}\r\n                         </Alert>\r\n                     )}\r\n                     {successMessage && (\r\n                         <Alert severity=\"success\" sx={{ width: '100%', mt: 2, mb: 1 }}>\r\n                             {successMessage}\r\n                         </Alert>\r\n                     )}\r\n\r\n                    <Button\r\n                        type=\"submit\" // Use submit type for form\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        // onClick={handleDownload} // onClick removed, handled by form onSubmit\r\n                        disabled={loading || !targetCustomerId || !startDate || !endDate}\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        sx={{ mt: 2 }}\r\n                        startIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <DownloadIcon />}\r\n                    >\r\n                        {loading ? 'Generating...' : 'Download PDF'}\r\n                    </Button>\r\n                 </Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}