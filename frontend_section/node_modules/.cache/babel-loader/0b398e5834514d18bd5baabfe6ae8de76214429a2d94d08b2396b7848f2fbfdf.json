{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\PendingApprovaslPage.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/Admin/PendingApprovalsPage.js ---\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n// Ensure this path is correct for your project structure\nimport { useAuth } from '../../../context/AuthContext';\n\n// Import MUI components...\nimport { Container, Typography, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button, CircularProgress, Alert, Snackbar, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nexport default function PendingApprovalsPage() {\n  _s();\n  const [pendingUsers, setPendingUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(''); // State to hold the ERROR STRING message\n  const [successMessage, setSuccessMessage] = useState('');\n  const {\n    authState\n  } = useAuth(); // Use auth state if needed later\n\n  // --- Helper Function to Extract Error Message ---\n  const getErrorMessage = err => {\n    let message = \"An unexpected error occurred.\"; // Default message\n    if (err.response && err.response.data) {\n      const errorData = err.response.data;\n      // Prioritize the 'message' field from the backend error object\n      if (errorData.message && typeof errorData.message === 'string') {\n        message = errorData.message;\n      }\n      // If no 'message', check if 'error' field exists (another common pattern)\n      else if (errorData.error && typeof errorData.error === 'string') {\n        message = errorData.error;\n        // Optionally add status: message = `${errorData.error} (Status: ${err.response.status})`;\n      }\n      // If the entire response data is just a string\n      else if (typeof errorData === 'string') {\n        message = errorData;\n      }\n      // Avoid showing the whole object: Don't stringify for user display unless desperate\n      // else { message = JSON.stringify(errorData); }\n    } else if (err.message) {\n      // Fallback to the generic JavaScript error message\n      message = err.message;\n    }\n    console.error(\"API Error:\", err); // Log the full error for debugging\n    console.error(\"Extracted Error Message:\", message); // Log the message being set\n    return message; // Return the extracted STRING\n  };\n  const fetchPendingUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError(''); // Clear previous error string\n    try {\n      const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\n        withCredentials: true // Crucial for sending session/auth info\n      });\n      // Ensure response.data is an array before setting state\n      if (Array.isArray(response.data)) {\n        setPendingUsers(response.data);\n      } else {\n        console.warn(\"Received non-array data for pending users:\", response.data);\n        setPendingUsers([]); // Set to empty array if data is not as expected\n        setError(\"Received unexpected data format from server.\");\n      }\n    } catch (err) {\n      // *** USE HELPER TO GET STRING MESSAGE ***\n      setError(getErrorMessage(err));\n      setPendingUsers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // Empty dependency array, fetch only on mount\n\n  useEffect(() => {\n    fetchPendingUsers();\n  }, [fetchPendingUsers]); // Depend on the memoized fetch function\n\n  const handleApprove = async customerId => {\n    setError('');\n    setSuccessMessage('');\n    setIsLoading(true); // Indicate loading during action\n    try {\n      const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, {\n        withCredentials: true\n      });\n      // Assuming backend returns a simple string message on success\n      setSuccessMessage(response.data || `User ${customerId} approved successfully!`);\n      await fetchPendingUsers(); // Refresh list after successful action\n    } catch (err) {\n      // *** USE HELPER TO GET STRING MESSAGE ***\n      setError(getErrorMessage(err));\n    } finally {\n      setIsLoading(false); // Stop loading indicator\n    }\n  };\n  const handleReject = async customerId => {\n    if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}? This action cannot be undone.`)) {\n      return;\n    }\n    setError('');\n    setSuccessMessage('');\n    setIsLoading(true); // Indicate loading during action\n    try {\n      const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, {\n        withCredentials: true\n      });\n      // Assuming backend returns a simple string message on success\n      setSuccessMessage(response.data || `User ${customerId} rejected successfully!`);\n      await fetchPendingUsers(); // Refresh list after successful action\n    } catch (err) {\n      // *** USE HELPER TO GET STRING MESSAGE ***\n      setError(getErrorMessage(err));\n    } finally {\n      setIsLoading(false); // Stop loading indicator\n    }\n  };\n\n  // --- Render Logic ---\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        },\n        mb: 2,\n        textAlign: 'center',\n        background: 'linear-gradient(45deg, #673ab7 30%, #3f51b5 90%)',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Pending Customer Approvals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        py: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading Actions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }, this), error && !isLoading &&\n    /*#__PURE__*/\n    // Only show error if not loading\n    _jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!successMessage,\n      autoHideDuration: 5000 // Show for 5 seconds\n      ,\n      onClose: () => setSuccessMessage(''),\n      message: successMessage,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden',\n        mt: isLoading ? 2 : 0\n      },\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"pending users table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Customer ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Mobile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Account No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                sx: {\n                  backgroundColor: 'primary.dark',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: !pendingUsers || pendingUsers.length === 0 ?\n            /*#__PURE__*/\n            // Check for null or empty\n            _jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                sx: {\n                  py: 3,\n                  fontStyle: 'italic'\n                },\n                children: \"No pending registrations found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this) : pendingUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${user.fname || ''} ${user.lname || ''}`.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobileNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.accountNumber || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"success\",\n                  size: \"small\",\n                  onClick: () => handleApprove(user.customerId),\n                  sx: {\n                    mr: 1\n                  },\n                  disabled: isLoading,\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => handleReject(user.customerId),\n                  disabled: isLoading,\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 45\n              }, this)]\n            }, user.customerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(PendingApprovalsPage, \"SFLEcrxHUlCX30I+chBkon6SJnc=\", false, function () {\n  return [useAuth];\n});\n_c = PendingApprovalsPage;\nvar _c;\n$RefreshReg$(_c, \"PendingApprovalsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useAuth","Container","Typography","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Button","CircularProgress","Alert","Snackbar","Box","jsxDEV","_jsxDEV","API_BASE_URL","PendingApprovalsPage","_s","pendingUsers","setPendingUsers","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","authState","getErrorMessage","err","message","response","data","errorData","console","fetchPendingUsers","get","withCredentials","Array","isArray","warn","handleApprove","customerId","post","handleReject","window","confirm","maxWidth","sx","mt","mb","children","elevation","p","xs","md","textAlign","background","color","variant","component","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","py","ml","severity","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","overflow","maxHeight","stickyHeader","backgroundColor","align","length","colSpan","fontStyle","map","user","hover","fname","lname","trim","email","mobileNumber","accountNumber","size","onClick","mr","disabled","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/PendingApprovaslPage.js"],"sourcesContent":["// --- src/component/Page/Admin/PendingApprovalsPage.js ---\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n// Ensure this path is correct for your project structure\r\nimport { useAuth } from '../../../context/AuthContext';\r\n\r\n// Import MUI components...\r\nimport {\r\n    Container, Typography, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button,\r\n    CircularProgress, Alert, Snackbar, Box\r\n} from '@mui/material';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\nexport default function PendingApprovalsPage() {\r\n    const [pendingUsers, setPendingUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(''); // State to hold the ERROR STRING message\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const { authState } = useAuth(); // Use auth state if needed later\r\n\r\n    // --- Helper Function to Extract Error Message ---\r\n    const getErrorMessage = (err) => {\r\n        let message = \"An unexpected error occurred.\"; // Default message\r\n        if (err.response && err.response.data) {\r\n            const errorData = err.response.data;\r\n            // Prioritize the 'message' field from the backend error object\r\n            if (errorData.message && typeof errorData.message === 'string') {\r\n                message = errorData.message;\r\n            }\r\n            // If no 'message', check if 'error' field exists (another common pattern)\r\n            else if (errorData.error && typeof errorData.error === 'string') {\r\n                message = errorData.error;\r\n                 // Optionally add status: message = `${errorData.error} (Status: ${err.response.status})`;\r\n            }\r\n             // If the entire response data is just a string\r\n             else if (typeof errorData === 'string') {\r\n                 message = errorData;\r\n             }\r\n            // Avoid showing the whole object: Don't stringify for user display unless desperate\r\n            // else { message = JSON.stringify(errorData); }\r\n        } else if (err.message) {\r\n            // Fallback to the generic JavaScript error message\r\n            message = err.message;\r\n        }\r\n        console.error(\"API Error:\", err); // Log the full error for debugging\r\n        console.error(\"Extracted Error Message:\", message); // Log the message being set\r\n        return message; // Return the extracted STRING\r\n    };\r\n\r\n    const fetchPendingUsers = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(''); // Clear previous error string\r\n        try {\r\n            const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\r\n                withCredentials: true // Crucial for sending session/auth info\r\n            });\r\n            // Ensure response.data is an array before setting state\r\n            if (Array.isArray(response.data)) {\r\n                 setPendingUsers(response.data);\r\n            } else {\r\n                 console.warn(\"Received non-array data for pending users:\", response.data);\r\n                 setPendingUsers([]); // Set to empty array if data is not as expected\r\n                 setError(\"Received unexpected data format from server.\");\r\n            }\r\n        } catch (err) {\r\n             // *** USE HELPER TO GET STRING MESSAGE ***\r\n            setError(getErrorMessage(err));\r\n            setPendingUsers([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []); // Empty dependency array, fetch only on mount\r\n\r\n    useEffect(() => {\r\n        fetchPendingUsers();\r\n    }, [fetchPendingUsers]); // Depend on the memoized fetch function\r\n\r\n    const handleApprove = async (customerId) => {\r\n        setError('');\r\n        setSuccessMessage('');\r\n        setIsLoading(true); // Indicate loading during action\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, {\r\n                withCredentials: true\r\n            });\r\n            // Assuming backend returns a simple string message on success\r\n            setSuccessMessage(response.data || `User ${customerId} approved successfully!`);\r\n            await fetchPendingUsers(); // Refresh list after successful action\r\n        } catch (err) {\r\n            // *** USE HELPER TO GET STRING MESSAGE ***\r\n            setError(getErrorMessage(err));\r\n        } finally {\r\n            setIsLoading(false); // Stop loading indicator\r\n        }\r\n    };\r\n\r\n    const handleReject = async (customerId) => {\r\n        if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}? This action cannot be undone.`)) {\r\n            return;\r\n        }\r\n        setError('');\r\n        setSuccessMessage('');\r\n         setIsLoading(true); // Indicate loading during action\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, {\r\n                withCredentials: true\r\n            });\r\n            // Assuming backend returns a simple string message on success\r\n            setSuccessMessage(response.data || `User ${customerId} rejected successfully!`);\r\n            await fetchPendingUsers(); // Refresh list after successful action\r\n        } catch (err) {\r\n            // *** USE HELPER TO GET STRING MESSAGE ***\r\n            setError(getErrorMessage(err));\r\n        } finally {\r\n            setIsLoading(false); // Stop loading indicator\r\n        }\r\n    };\r\n\r\n    // --- Render Logic ---\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 }, mb: 2, textAlign: 'center', background: 'linear-gradient(45deg, #673ab7 30%, #3f51b5 90%)', color: 'white' }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\r\n                    Pending Customer Approvals\r\n                </Typography>\r\n            </Paper>\r\n\r\n            {/* Loading Indicator centered */}\r\n            {isLoading && (\r\n                 <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', py: 5 }}>\r\n                    <CircularProgress />\r\n                     <Typography sx={{ ml: 2 }}>Loading Actions...</Typography> {/* Indicate action loading */}\r\n                 </Box>\r\n             )}\r\n\r\n\r\n            {/* Error Alert - Renders the 'error' state string */}\r\n            {error && !isLoading && ( // Only show error if not loading\r\n                <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n            )}\r\n\r\n            {/* Success Snackbar for brief messages */}\r\n            <Snackbar\r\n                open={!!successMessage}\r\n                autoHideDuration={5000} // Show for 5 seconds\r\n                onClose={() => setSuccessMessage('')}\r\n                message={successMessage}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            />\r\n\r\n            {/* Table of Pending Users - Only render if not loading */}\r\n            {!isLoading && (\r\n                <Paper sx={{ width: '100%', overflow: 'hidden', mt: isLoading ? 2 : 0 }}>\r\n                    <TableContainer sx={{ maxHeight: 600 }}>\r\n                        <Table stickyHeader aria-label=\"pending users table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Customer ID</TableCell>\r\n                                    <TableCell sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Name</TableCell>\r\n                                    <TableCell sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Email</TableCell>\r\n                                    <TableCell sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Mobile</TableCell>\r\n                                    <TableCell sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Account No</TableCell>\r\n                                    <TableCell align=\"center\" sx={{ backgroundColor: 'primary.dark', color: 'white', fontWeight: 'bold' }}>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {!pendingUsers || pendingUsers.length === 0 ? ( // Check for null or empty\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={6} align=\"center\" sx={{ py: 3, fontStyle: 'italic' }}>\r\n                                            No pending registrations found.\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ) : (\r\n                                    pendingUsers.map((user) => (\r\n                                        <TableRow hover key={user.customerId}>\r\n                                            <TableCell>{user.customerId}</TableCell>\r\n                                            <TableCell>{`${user.fname || ''} ${user.lname || ''}`.trim()}</TableCell>\r\n                                            <TableCell>{user.email}</TableCell>\r\n                                            <TableCell>{user.mobileNumber}</TableCell>\r\n                                            <TableCell>{user.accountNumber || 'N/A'}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {/* Disable buttons while any action is loading */}\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"success\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleApprove(user.customerId)}\r\n                                                    sx={{ mr: 1 }}\r\n                                                    disabled={isLoading}\r\n                                                >\r\n                                                    Approve\r\n                                                </Button>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"error\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleReject(user.customerId)}\r\n                                                    disabled={isLoading}\r\n                                                >\r\n                                                    Reject\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            )}\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}