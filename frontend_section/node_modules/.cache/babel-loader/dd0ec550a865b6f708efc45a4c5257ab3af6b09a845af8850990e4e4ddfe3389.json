{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\n\n// Import MUI components\nimport { Container, Box, TextField, Button, Typography, CircularProgress, Alert, Grid // Optional: for layout if needed\n} from '@mui/material';\n\n// Remove the CSS import if using MUI predominantly\n// import '../cssfiles/Registraion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registration() {\n  _s();\n  const navigate = useNavigate(); // Hook for navigation\n\n  // --- State Management ---\n  const [formData, setFormData] = useState({\n    mobileNumber: '',\n    email: '',\n    fname: '',\n    // First Name\n    lname: '',\n    // Last Name\n    fathername: '',\n    // Father's Name\n    address: '',\n    pincode: '',\n    dob: '',\n    // Date of Birth (YYYY-MM-DD format for type=\"date\")\n    password: '',\n    confirmPassword: '' // Added for validation\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // --- Handlers ---\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    // Clear messages when user starts typing again\n    if (errorMessage) setErrorMessage('');\n    if (successMessage) setSuccessMessage('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n\n    // **1. Client-side Validation (Password Match)**\n    if (formData.password !== formData.confirmPassword) {\n      setErrorMessage(\"Passwords do not match!\");\n      return; // Stop submission\n    }\n    setIsLoading(true);\n\n    // **2. Prepare Data for API (remove confirmPassword)**\n    // We don't usually send confirmPassword to the backend\n    const {\n      confirmPassword,\n      ...dataToSend\n    } = formData;\n    console.log(\"Submitting Registration Data:\", dataToSend); // Avoid logging password in production\n\n    try {\n      var _response$data;\n      // **3. API Call**\n      // Ensure the endpoint \"/register\" expects exactly the fields in dataToSend\n      const response = await axios.post(\"http://localhost:8080/register\", dataToSend);\n      console.log(\"Registration successful:\", response.data); // Log response from server\n      setSuccessMessage(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || \"Registration successful! You can now log in.\"); // Use server message or default\n\n      // Optionally clear the form on success\n      setFormData({\n        mobileNumber: '',\n        email: '',\n        fname: '',\n        lname: '',\n        fathername: '',\n        address: '',\n        pincode: '',\n        dob: '',\n        password: '',\n        confirmPassword: ''\n      });\n\n      // Optionally redirect to login page after a short delay\n      setTimeout(() => {\n        navigate('/login'); // Assuming '/login' is your login route\n      }, 2000); // Wait 2 seconds\n    } catch (error) {\n      // **4. Error Handling**\n      console.error(\"Registration error:\", error);\n      if (error.response) {\n        var _error$response$data;\n        // Server responded with an error status (4xx, 5xx)\n        setErrorMessage(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.response.data || `Registration failed (Status: ${error.response.status})`);\n      } else if (error.request) {\n        // Request made but no response received (network error)\n        setErrorMessage(\"Network error. Could not reach the server. Please try again.\");\n      } else {\n        // Other errors (e.g., setting up the request)\n        setErrorMessage(\"An unexpected error occurred during registration.\");\n      }\n    } finally {\n      // **5. Cleanup**\n      setIsLoading(false);\n    }\n  };\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"fname\",\n              required: true,\n              fullWidth: true,\n              id: \"fname\",\n              label: \"First Name\",\n              value: formData.fname,\n              onChange: handleChange,\n              disabled: isLoading,\n              autoComplete: \"given-name\",\n              autoFocus: true // Focus this field first\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"lname\",\n              required: true,\n              fullWidth: true,\n              id: \"lname\",\n              label: \"Last Name\",\n              value: formData.lname,\n              onChange: handleChange,\n              disabled: isLoading,\n              autoComplete: \"family-name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"fathername\",\n              required: true,\n              fullWidth: true,\n              id: \"fathername\",\n              label: \"Father's Name\",\n              value: formData.fathername,\n              onChange: handleChange,\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"email\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              type: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              disabled: isLoading,\n              autoComplete: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"mobileNumber\",\n              required: true,\n              fullWidth: true,\n              id: \"mobileNumber\",\n              label: \"Mobile Number\",\n              type: \"tel\" // Use 'tel' type\n              ,\n              value: formData.mobileNumber,\n              onChange: handleChange,\n              disabled: isLoading,\n              autoComplete: \"tel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"dob\",\n              required: true,\n              fullWidth: true,\n              id: \"dob\",\n              label: \"Date of Birth\",\n              type: \"date\" // Use 'date' type\n              ,\n              value: formData.dob,\n              onChange: handleChange,\n              disabled: isLoading,\n              InputLabelProps: {\n                shrink: true\n              } // Keep label shrunk for date type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"address\",\n              required: true,\n              fullWidth: true,\n              id: \"address\",\n              label: \"Full Address\",\n              value: formData.address,\n              onChange: handleChange,\n              disabled: isLoading,\n              multiline: true // Allow multiple lines\n              ,\n              rows: 3 // Set initial height\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"pincode\",\n              required: true,\n              fullWidth: true,\n              id: \"pincode\",\n              label: \"Pincode\",\n              type: \"text\" // Use text to allow various formats/leading zeros\n              ,\n              value: formData.pincode,\n              onChange: handleChange,\n              disabled: isLoading,\n              autoComplete: \"postal-code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"password\",\n              required: true,\n              fullWidth: true,\n              id: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              disabled: isLoading,\n              error: !!errorMessage && errorMessage.toLowerCase().includes('password') // Highlight if error mentions password\n              ,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"confirmPassword\",\n              required: true,\n              fullWidth: true,\n              id: \"confirmPassword\",\n              label: \"Confirm Password\",\n              type: \"password\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              disabled: isLoading,\n              error: !!errorMessage && errorMessage.toLowerCase().includes('password') // Highlight on password errors\n              ,\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2,\n            bgcolor: '#28a745',\n            '&:hover': {\n              bgcolor: '#218838'\n            }\n          } // Green color\n          ,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 38\n          }, this) : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          onClick: () => navigate('/login') // Navigate to login route\n          ,\n          disabled: isLoading,\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(Registration, \"jq/kkUinXTHNGLPeO4juFTUXqgU=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Container","Box","TextField","Button","Typography","CircularProgress","Alert","Grid","jsxDEV","_jsxDEV","Registration","_s","navigate","formData","setFormData","mobileNumber","email","fname","lname","fathername","address","pincode","dob","password","confirmPassword","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","dataToSend","console","log","_response$data","response","post","data","message","setTimeout","error","_error$response$data","status","request","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","mt","onSubmit","noValidate","container","spacing","item","xs","sm","required","fullWidth","id","label","onChange","disabled","autoComplete","autoFocus","type","InputLabelProps","shrink","multiline","rows","toLowerCase","includes","mb","bgcolor","size","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Registration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\n\r\n// Import MUI components\r\nimport {\r\n    Container,\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    CircularProgress,\r\n    Alert,\r\n    Grid // Optional: for layout if needed\r\n} from '@mui/material';\r\n\r\n// Remove the CSS import if using MUI predominantly\r\n// import '../cssfiles/Registraion.css';\r\n\r\nexport default function Registration() {\r\n    const navigate = useNavigate(); // Hook for navigation\r\n\r\n    // --- State Management ---\r\n    const [formData, setFormData] = useState({\r\n        mobileNumber: '',\r\n        email: '',\r\n        fname: '', // First Name\r\n        lname: '', // Last Name\r\n        fathername: '', // Father's Name\r\n        address: '',\r\n        pincode: '',\r\n        dob: '', // Date of Birth (YYYY-MM-DD format for type=\"date\")\r\n        password: '',\r\n        confirmPassword: '' // Added for validation\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    // --- Handlers ---\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n        // Clear messages when user starts typing again\r\n        if (errorMessage) setErrorMessage('');\r\n        if (successMessage) setSuccessMessage('');\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage('');\r\n        setSuccessMessage('');\r\n\r\n        // **1. Client-side Validation (Password Match)**\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setErrorMessage(\"Passwords do not match!\");\r\n            return; // Stop submission\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        // **2. Prepare Data for API (remove confirmPassword)**\r\n        // We don't usually send confirmPassword to the backend\r\n        const { confirmPassword, ...dataToSend } = formData;\r\n\r\n        console.log(\"Submitting Registration Data:\", dataToSend); // Avoid logging password in production\r\n\r\n        try {\r\n            // **3. API Call**\r\n            // Ensure the endpoint \"/register\" expects exactly the fields in dataToSend\r\n            const response = await axios.post(\"http://localhost:8080/register\", dataToSend);\r\n\r\n            console.log(\"Registration successful:\", response.data); // Log response from server\r\n            setSuccessMessage(response.data?.message || \"Registration successful! You can now log in.\"); // Use server message or default\r\n\r\n            // Optionally clear the form on success\r\n            setFormData({\r\n                mobileNumber: '', email: '', fname: '', lname: '', fathername: '',\r\n                address: '', pincode: '', dob: '', password: '', confirmPassword: ''\r\n            });\r\n\r\n            // Optionally redirect to login page after a short delay\r\n            setTimeout(() => {\r\n                navigate('/login'); // Assuming '/login' is your login route\r\n            }, 2000); // Wait 2 seconds\r\n\r\n        } catch (error) {\r\n            // **4. Error Handling**\r\n            console.error(\"Registration error:\", error);\r\n            if (error.response) {\r\n                // Server responded with an error status (4xx, 5xx)\r\n                setErrorMessage(error.response.data?.message || error.response.data || `Registration failed (Status: ${error.response.status})`);\r\n            } else if (error.request) {\r\n                // Request made but no response received (network error)\r\n                setErrorMessage(\"Network error. Could not reach the server. Please try again.\");\r\n            } else {\r\n                // Other errors (e.g., setting up the request)\r\n                setErrorMessage(\"An unexpected error occurred during registration.\");\r\n            }\r\n        } finally {\r\n            // **5. Cleanup**\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- JSX ---\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\"> {/* Max width 'sm' for slightly wider form */}\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register New Account\r\n                </Typography>\r\n\r\n                {/* Display Success/Error Messages */}\r\n                {successMessage && (\r\n                    <Alert severity=\"success\" sx={{ width: '100%', mt: 2 }}>\r\n                        {successMessage}\r\n                    </Alert>\r\n                )}\r\n                {errorMessage && (\r\n                    <Alert severity=\"error\" sx={{ width: '100%', mt: 2 }}>\r\n                        {errorMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 3 }}>\r\n                    {/* Use Grid container for better layout (2 columns) */}\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name=\"fname\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"fname\"\r\n                                label=\"First Name\"\r\n                                value={formData.fname}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                autoComplete=\"given-name\"\r\n                                autoFocus // Focus this field first\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name=\"lname\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lname\"\r\n                                label=\"Last Name\"\r\n                                value={formData.lname}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                autoComplete=\"family-name\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}> {/* Full width */}\r\n                            <TextField\r\n                                name=\"fathername\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"fathername\"\r\n                                label=\"Father's Name\"\r\n                                value={formData.fathername}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                name=\"email\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                         <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name=\"mobileNumber\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"mobileNumber\"\r\n                                label=\"Mobile Number\"\r\n                                type=\"tel\" // Use 'tel' type\r\n                                value={formData.mobileNumber}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                autoComplete=\"tel\"\r\n                            />\r\n                        </Grid>\r\n                         <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name=\"dob\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"dob\"\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\" // Use 'date' type\r\n                                value={formData.dob}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                InputLabelProps={{ shrink: true }} // Keep label shrunk for date type\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                name=\"address\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Full Address\"\r\n                                value={formData.address}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                multiline // Allow multiple lines\r\n                                rows={3}   // Set initial height\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}> {/* Example half width */}\r\n                           <TextField\r\n                                name=\"pincode\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"pincode\"\r\n                                label=\"Pincode\"\r\n                                type=\"text\" // Use text to allow various formats/leading zeros\r\n                                value={formData.pincode}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                autoComplete=\"postal-code\"\r\n                            />\r\n                        </Grid>\r\n                        {/* Password fields can remain full width or be put side-by-side */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                name=\"password\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                error={!!errorMessage && errorMessage.toLowerCase().includes('password')} // Highlight if error mentions password\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                        </Grid>\r\n                         <Grid item xs={12}>\r\n                            <TextField\r\n                                name=\"confirmPassword\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                value={formData.confirmPassword}\r\n                                onChange={handleChange}\r\n                                disabled={isLoading}\r\n                                error={!!errorMessage && errorMessage.toLowerCase().includes('password')} // Highlight on password errors\r\n                                autoComplete=\"new-password\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid> {/* End Grid container */}\r\n\r\n                    {/* Submit Button */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2, bgcolor: '#28a745', '&:hover': { bgcolor: '#218838' } }} // Green color\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Register'}\r\n                    </Button>\r\n\r\n                     {/* Optional: Link back to Login */}\r\n                     <Button\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onClick={() => navigate('/login')} // Navigate to login route\r\n                        disabled={isLoading}\r\n                    >\r\n                        Already have an account? Login\r\n                    </Button>\r\n\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}