{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\AdminApplicationsListPage.js\";\n// --- src/component/Page/Admin/AdminApplicationsListPage.js ---\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n// **** FIX: Ensure ALL necessary MUI components are imported ****\nimport { Container, Typography, Box, Button, Paper, Grid, Tooltip, Chip, IconButton, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert, Link as MuiLink // Removed Snackbar import as it wasn't used here\n} from '@mui/material';\n// **** END FIX ****\n\n// Import Icons (Keep these)\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\n\n// Helper function to format date/time\nconst formatDateTime = dateTimeString => {\n  // Ensure this function is defined\n  if (!dateTimeString) return 'N/A';\n  try {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    };\n    return new Intl.DateTimeFormat('en-US', options).format(new Date(dateTimeString));\n  } catch (e) {\n    console.error(\"Date formatting error:\", e);\n    return 'Invalid Date';\n  }\n};\n\n// Helper function for status chips\nconst getStatusChip = status => {\n  var _status$replace;\n  // Ensure this function is defined\n  let color = 'default';\n  switch (status) {\n    case 'PENDING':\n      color = 'warning';\n      break;\n    case 'UNDER_REVIEW':\n      color = 'info';\n      break;\n    case 'INTERVIEW_SCHEDULED':\n      color = 'primary';\n      break;\n    case 'HIRED':\n      color = 'success';\n      break;\n    case 'REJECTED':\n      color = 'error';\n      break;\n    default:\n      color = 'default';\n  }\n  return /*#__PURE__*/_jsxDEV(Chip, {\n    label: (_status$replace = status === null || status === void 0 ? void 0 : status.replace('_', ' ')) !== null && _status$replace !== void 0 ? _status$replace : 'UNKNOWN',\n    color: color,\n    size: \"small\",\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\nexport default function AdminApplicationsListPage() {\n  // ... rest of your component code (useState, useEffect, fetchApplications, handleViewDetails, return statement) ...\n  // The JSX part should now work without the 'is not defined' errors if the import is correct.\n}\n_c = AdminApplicationsListPage;\nvar _c;\n$RefreshReg$(_c, \"AdminApplicationsListPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Link","RouterLink","useNavigate","Container","Typography","Box","Button","Paper","Grid","Tooltip","Chip","IconButton","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CircularProgress","Alert","MuiLink","RefreshIcon","VisibilityIcon","ArrowBackIcon","jsxDEV","_jsxDEV","API_BASE_URL","formatDateTime","dateTimeString","options","year","month","day","hour","minute","hour12","Intl","DateTimeFormat","format","Date","e","console","error","getStatusChip","status","_status$replace","color","label","replace","size","variant","fileName","_jsxFileName","lineNumber","columnNumber","AdminApplicationsListPage","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/AdminApplicationsListPage.js"],"sourcesContent":["// --- src/component/Page/Admin/AdminApplicationsListPage.js ---\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\n// **** FIX: Ensure ALL necessary MUI components are imported ****\r\nimport {\r\n    Container, Typography, Box, Button, Paper, Grid, Tooltip, Chip, IconButton,\r\n    TableContainer, Table, TableHead, TableRow, TableCell, TableBody,\r\n    CircularProgress, Alert, Link as MuiLink // Removed Snackbar import as it wasn't used here\r\n} from '@mui/material';\r\n// **** END FIX ****\r\n\r\n// Import Icons (Keep these)\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\n// Helper function to format date/time\r\nconst formatDateTime = (dateTimeString) => { // Ensure this function is defined\r\n    if (!dateTimeString) return 'N/A';\r\n    try {\r\n        const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true };\r\n        return new Intl.DateTimeFormat('en-US', options).format(new Date(dateTimeString));\r\n    } catch (e) {\r\n        console.error(\"Date formatting error:\", e);\r\n        return 'Invalid Date';\r\n    }\r\n};\r\n\r\n// Helper function for status chips\r\nconst getStatusChip = (status) => { // Ensure this function is defined\r\n    let color = 'default';\r\n    switch (status) {\r\n        case 'PENDING': color = 'warning'; break;\r\n        case 'UNDER_REVIEW': color = 'info'; break;\r\n        case 'INTERVIEW_SCHEDULED': color = 'primary'; break;\r\n        case 'HIRED': color = 'success'; break;\r\n        case 'REJECTED': color = 'error'; break;\r\n        default: color = 'default';\r\n    }\r\n    return <Chip label={status?.replace('_', ' ') ?? 'UNKNOWN'} color={color} size=\"small\" variant=\"outlined\" />;\r\n};\r\n\r\nexport default function AdminApplicationsListPage() {\r\n   // ... rest of your component code (useState, useEffect, fetchApplications, handleViewDetails, return statement) ...\r\n   // The JSX part should now work without the 'is not defined' errors if the import is correct.\r\n}"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,IAAIC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;;AAElE;AACA,SACIC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,IAAI,EAAEC,UAAU,EAC1EC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAChEC,gBAAgB,EAAEC,KAAK,EAAEnB,IAAI,IAAIoB,OAAO,CAAC;AAAA,OACtC,eAAe;AACtB;;AAEA;AACA,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,cAAc,GAAIC,cAAc,IAAK;EAAE;EACzC,IAAI,CAACA,cAAc,EAAE,OAAO,KAAK;EACjC,IAAI;IACA,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IACrH,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAER,OAAO,CAAC,CAACS,MAAM,CAAC,IAAIC,IAAI,CAACX,cAAc,CAAC,CAAC;EACrF,CAAC,CAAC,OAAOY,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,CAAC,CAAC;IAC1C,OAAO,cAAc;EACzB;AACJ,CAAC;;AAED;AACA,MAAMG,aAAa,GAAIC,MAAM,IAAK;EAAA,IAAAC,eAAA;EAAE;EAChC,IAAIC,KAAK,GAAG,SAAS;EACrB,QAAQF,MAAM;IACV,KAAK,SAAS;MAAEE,KAAK,GAAG,SAAS;MAAE;IACnC,KAAK,cAAc;MAAEA,KAAK,GAAG,MAAM;MAAE;IACrC,KAAK,qBAAqB;MAAEA,KAAK,GAAG,SAAS;MAAE;IAC/C,KAAK,OAAO;MAAEA,KAAK,GAAG,SAAS;MAAE;IACjC,KAAK,UAAU;MAAEA,KAAK,GAAG,OAAO;MAAE;IAClC;MAASA,KAAK,GAAG,SAAS;EAC9B;EACA,oBAAOrB,OAAA,CAACf,IAAI;IAACqC,KAAK,GAAAF,eAAA,GAAED,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,cAAAH,eAAA,cAAAA,eAAA,GAAI,SAAU;IAACC,KAAK,EAAEA,KAAM;IAACG,IAAI,EAAC,OAAO;IAACC,OAAO,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChH,CAAC;AAED,eAAe,SAASC,yBAAyBA,CAAA,EAAG;EACjD;EACA;AAAA;AACFC,EAAA,GAHuBD,yBAAyB;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}