{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\AdminApplicationsListPage.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/Admin/AdminApplicationsListPage.js ---\n// Enhanced version with logging and improved rendering logic\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n// Import MUI components\nimport { Container, Typography, Box, Button, Paper, Grid, Tooltip, Chip, IconButton, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert, Link as MuiLink // Import necessary MUI components\n} from '@mui/material';\n// Import Icons\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Backend API Base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\n\n// --- Helper Functions ---\n\n// Formats date-time string for display\nconst formatDateTime = dateTimeString => {\n  if (!dateTimeString) return 'N/A';\n  try {\n    // Options for formatting: e.g., \"Aug 23, 2023, 10:30 AM\"\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    };\n    return new Intl.DateTimeFormat('en-US', options).format(new Date(dateTimeString));\n  } catch (e) {\n    console.error(\"Date formatting error:\", e);\n    return 'Invalid Date';\n  }\n};\n\n// Creates a styled Chip based on application status\nconst getStatusChip = status => {\n  let color = 'default';\n  let label = 'Unknown';\n  if (status) {\n    label = status.replace('_', ' '); // Replace underscores for readability\n    switch (status) {\n      case 'PENDING':\n        color = 'warning';\n        break;\n      case 'UNDER_REVIEW':\n        color = 'info';\n        break;\n      case 'INTERVIEW_SCHEDULED':\n        color = 'primary';\n        break;\n      case 'HIRED':\n        color = 'success';\n        break;\n      case 'REJECTED':\n        color = 'error';\n        break;\n      default:\n        color = 'default';\n        label = status;\n      // Show original if not matched\n    }\n  }\n  // Return MUI Chip component\n  return /*#__PURE__*/_jsxDEV(Chip, {\n    label: label,\n    color: color,\n    size: \"small\",\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n// --- Component ---\n\nexport default function AdminApplicationsListPage() {\n  _s();\n  // --- State Variables ---\n  const [applications, setApplications] = useState([]); // Holds the fetched application data\n  const [isLoading, setIsLoading] = useState(false); // Tracks loading state for fetch\n  const [error, setError] = useState(''); // Stores any fetch error messages\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  // --- Data Fetching Logic ---\n  const fetchApplications = useCallback(async () => {\n    setIsLoading(true); // Start loading indicator\n    setError(''); // Clear previous errors\n    console.log(\"[Frontend] Fetching applications from /admin/applications...\"); // LOG 1\n\n    try {\n      // Make API call to backend endpoint\n      const response = await axios.get(`${API_BASE_URL}/admin/applications`, {\n        withCredentials: true // Necessary for authenticated admin endpoints\n      });\n      console.log(\"[Frontend] Raw API Response:\", response); // LOG 2\n      console.log(\"[Frontend] Response Data:\", response.data); // LOG 3\n\n      // Validate the received data\n      if (response && Array.isArray(response.data)) {\n        console.log(`[Frontend] Received valid array with ${response.data.length} items. Setting state.`); // LOG 4\n        setApplications(response.data); // Update state with the array of applications\n      } else {\n        console.error(\"[Frontend] Invalid data received. Expected an array, got:\", response.data); // LOG 5\n        setError(\"Received unexpected data format from server.\"); // Set error message\n        setApplications([]); // Reset state to empty array\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      // Handle API call errors\n      console.error(\"[Frontend] API call failed:\", err); // LOG 6\n      if (err.response) {\n        // Log details if available\n        console.error(\"[Frontend] Error response data:\", err.response.data);\n        console.error(\"[Frontend] Error response status:\", err.response.status);\n      }\n      // Set user-friendly error message\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message || 'Failed to fetch job applications.');\n      setApplications([]); // Reset state on error\n    } finally {\n      setIsLoading(false); // Stop loading indicator regardless of outcome\n    }\n  }, []); // `useCallback` with empty dependency array means this function is created once\n\n  // --- Initial Data Fetch ---\n  useEffect(() => {\n    fetchApplications(); // Fetch data when the component mounts\n  }, [fetchApplications]); // Dependency array ensures fetchApplications isn't recreated unnecessarily\n\n  // --- State Change Logger (for debugging) ---\n  useEffect(() => {\n    console.log(\"[Frontend] 'applications' state updated to:\", applications); // LOG 7\n  }, [applications]); // Runs whenever the `applications` state value changes\n\n  // --- Navigation Handler ---\n  const handleViewDetails = appId => {\n    // Navigate to the detail page for the specific application ID\n    navigate(`/admin/applications/${appId}`);\n  };\n\n  // --- Render Logic ---\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        p: 2,\n        mb: 3,\n        textAlign: 'center',\n        background: 'linear-gradient(45deg, #ff9800 30%, #f57c00 90%)',\n        // Orange gradient\n        color: 'white',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Manage Job Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: {\n          xs: 1,\n          sm: 2,\n          md: 3\n        },\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2,\n          borderBottom: '1px solid #eee',\n          pb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 89\n          }, this),\n          onClick: () => navigate('/admin/dashboard'),\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh List\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: fetchApplications,\n              color: \"primary\",\n              disabled: isLoading,\n              children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          my: 5,\n          minHeight: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 2\n          },\n          children: \"Loading Applications...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 3,\n          textAlign: 'center'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2,\n            justifyContent: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: fetchApplications,\n          variant: \"contained\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"job applications table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '& th': {\n                  fontWeight: 'bold',\n                  backgroundColor: 'grey.200'\n                }\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Applicant Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Desired Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Applied On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: !Array.isArray(applications) || applications.length === 0 ?\n            /*#__PURE__*/\n            // Display when applications is not an array or is empty\n            _jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 7,\n                align: \"center\",\n                sx: {\n                  py: 5,\n                  fontStyle: 'italic',\n                  color: 'text.secondary'\n                },\n                children: \"No submitted job applications found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this) :\n            // Map and render rows only if applications is a non-empty array\n            applications.map((app, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              // Use unique ID from application data\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                },\n                backgroundColor: index % 2 !== 0 ? 'action.hover' : 'background.paper' // Alternate row bg\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '0.875rem'\n                },\n                children: `${app.applicantFirstName || 'N/A'} ${app.applicantLastName || ''}`.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '0.875rem'\n                },\n                children: app.applicantEmail || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '0.875rem'\n                },\n                children: app.applicantPhone || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '0.875rem'\n                },\n                children: app.desiredRole || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontSize: '0.875rem'\n                },\n                children: formatDateTime(app.applicationDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: getStatusChip(app.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"View Details & Actions\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: () => handleViewDetails(app.id),\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 14\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminApplicationsListPage, \"Ifa7VDgB0iZ83PLLyF5rsvfFFeE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminApplicationsListPage;\nvar _c;\n$RefreshReg$(_c, \"AdminApplicationsListPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Link","RouterLink","useNavigate","Container","Typography","Box","Button","Paper","Grid","Tooltip","Chip","IconButton","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CircularProgress","Alert","MuiLink","RefreshIcon","VisibilityIcon","ArrowBackIcon","jsxDEV","_jsxDEV","API_BASE_URL","formatDateTime","dateTimeString","options","year","month","day","hour","minute","hour12","Intl","DateTimeFormat","format","Date","e","console","error","getStatusChip","status","color","label","replace","size","variant","fileName","_jsxFileName","lineNumber","columnNumber","AdminApplicationsListPage","_s","applications","setApplications","isLoading","setIsLoading","setError","navigate","fetchApplications","log","response","get","withCredentials","data","Array","isArray","length","err","_err$response","_err$response$data","_err$response2","message","handleViewDetails","appId","maxWidth","sx","mt","mb","children","elevation","p","textAlign","background","borderRadius","component","fontWeight","xs","sm","md","display","justifyContent","alignItems","borderBottom","pb","startIcon","onClick","title","disabled","flexDirection","my","minHeight","severity","stickyHeader","backgroundColor","align","colSpan","py","fontStyle","map","app","index","hover","border","fontSize","applicantFirstName","applicantLastName","trim","applicantEmail","applicantPhone","desiredRole","applicationDate","id","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/AdminApplicationsListPage.js"],"sourcesContent":["// --- src/component/Page/Admin/AdminApplicationsListPage.js ---\r\n// Enhanced version with logging and improved rendering logic\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\n// Import MUI components\r\nimport {\r\n    Container, Typography, Box, Button, Paper, Grid, Tooltip, Chip, IconButton,\r\n    TableContainer, Table, TableHead, TableRow, TableCell, TableBody,\r\n    CircularProgress, Alert, Link as MuiLink // Import necessary MUI components\r\n} from '@mui/material';\r\n// Import Icons\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Backend API Base URL\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\n// --- Helper Functions ---\r\n\r\n// Formats date-time string for display\r\nconst formatDateTime = (dateTimeString) => {\r\n    if (!dateTimeString) return 'N/A';\r\n    try {\r\n        // Options for formatting: e.g., \"Aug 23, 2023, 10:30 AM\"\r\n        const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true };\r\n        return new Intl.DateTimeFormat('en-US', options).format(new Date(dateTimeString));\r\n    } catch (e) {\r\n        console.error(\"Date formatting error:\", e);\r\n        return 'Invalid Date';\r\n    }\r\n};\r\n\r\n// Creates a styled Chip based on application status\r\nconst getStatusChip = (status) => {\r\n    let color = 'default';\r\n    let label = 'Unknown';\r\n\r\n    if (status) {\r\n        label = status.replace('_', ' '); // Replace underscores for readability\r\n        switch (status) {\r\n            case 'PENDING': color = 'warning'; break;\r\n            case 'UNDER_REVIEW': color = 'info'; break;\r\n            case 'INTERVIEW_SCHEDULED': color = 'primary'; break;\r\n            case 'HIRED': color = 'success'; break;\r\n            case 'REJECTED': color = 'error'; break;\r\n            default: color = 'default'; label = status; // Show original if not matched\r\n        }\r\n    }\r\n    // Return MUI Chip component\r\n    return <Chip label={label} color={color} size=\"small\" variant=\"outlined\" />;\r\n};\r\n\r\n// --- Component ---\r\n\r\nexport default function AdminApplicationsListPage() {\r\n    // --- State Variables ---\r\n    const [applications, setApplications] = useState([]); // Holds the fetched application data\r\n    const [isLoading, setIsLoading] = useState(false); // Tracks loading state for fetch\r\n    const [error, setError] = useState(''); // Stores any fetch error messages\r\n    const navigate = useNavigate(); // Hook for programmatic navigation\r\n\r\n    // --- Data Fetching Logic ---\r\n    const fetchApplications = useCallback(async () => {\r\n        setIsLoading(true); // Start loading indicator\r\n        setError(''); // Clear previous errors\r\n        console.log(\"[Frontend] Fetching applications from /admin/applications...\"); // LOG 1\r\n\r\n        try {\r\n            // Make API call to backend endpoint\r\n            const response = await axios.get(`${API_BASE_URL}/admin/applications`, {\r\n                withCredentials: true // Necessary for authenticated admin endpoints\r\n            });\r\n\r\n            console.log(\"[Frontend] Raw API Response:\", response); // LOG 2\r\n            console.log(\"[Frontend] Response Data:\", response.data); // LOG 3\r\n\r\n            // Validate the received data\r\n            if (response && Array.isArray(response.data)) {\r\n                console.log(`[Frontend] Received valid array with ${response.data.length} items. Setting state.`); // LOG 4\r\n                setApplications(response.data); // Update state with the array of applications\r\n            } else {\r\n                console.error(\"[Frontend] Invalid data received. Expected an array, got:\", response.data); // LOG 5\r\n                setError(\"Received unexpected data format from server.\"); // Set error message\r\n                setApplications([]); // Reset state to empty array\r\n            }\r\n        } catch (err) {\r\n            // Handle API call errors\r\n            console.error(\"[Frontend] API call failed:\", err); // LOG 6\r\n            if (err.response) { // Log details if available\r\n                console.error(\"[Frontend] Error response data:\", err.response.data);\r\n                console.error(\"[Frontend] Error response status:\", err.response.status);\r\n            }\r\n            // Set user-friendly error message\r\n            setError(err.response?.data?.message || err.response?.data || err.message || 'Failed to fetch job applications.');\r\n            setApplications([]); // Reset state on error\r\n        } finally {\r\n            setIsLoading(false); // Stop loading indicator regardless of outcome\r\n        }\r\n    }, []); // `useCallback` with empty dependency array means this function is created once\r\n\r\n    // --- Initial Data Fetch ---\r\n    useEffect(() => {\r\n        fetchApplications(); // Fetch data when the component mounts\r\n    }, [fetchApplications]); // Dependency array ensures fetchApplications isn't recreated unnecessarily\r\n\r\n    // --- State Change Logger (for debugging) ---\r\n    useEffect(() => {\r\n        console.log(\"[Frontend] 'applications' state updated to:\", applications); // LOG 7\r\n    }, [applications]); // Runs whenever the `applications` state value changes\r\n\r\n    // --- Navigation Handler ---\r\n    const handleViewDetails = (appId) => {\r\n        // Navigate to the detail page for the specific application ID\r\n        navigate(`/admin/applications/${appId}`);\r\n    };\r\n\r\n    // --- Render Logic ---\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}> {/* Wider container */}\r\n\r\n             {/* Styled Header */}\r\n            <Paper elevation={4} sx={{\r\n                p: 2, mb: 3, textAlign: 'center',\r\n                background: 'linear-gradient(45deg, #ff9800 30%, #f57c00 90%)', // Orange gradient\r\n                color: 'white', borderRadius: '8px'\r\n            }}>\r\n                 <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 'bold' }}>\r\n                    Manage Job Applications\r\n                </Typography>\r\n            </Paper>\r\n\r\n             {/* Main Content Area */}\r\n             <Paper elevation={2} sx={{ p: { xs: 1, sm: 2, md: 3 }, borderRadius: '8px' }}>\r\n                 {/* Top Bar: Back Button & Refresh */}\r\n                 <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2, borderBottom: '1px solid #eee', pb: 1 }}>\r\n                     <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<ArrowBackIcon />}\r\n                        onClick={() => navigate('/admin/dashboard')}>\r\n                        Admin Dashboard\r\n                    </Button>\r\n                    <Tooltip title=\"Refresh List\">\r\n                        <span> {/* Wrapper for tooltip when button is disabled */}\r\n                            <IconButton onClick={fetchApplications} color=\"primary\" disabled={isLoading}>\r\n                                <RefreshIcon />\r\n                            </IconButton>\r\n                        </span>\r\n                    </Tooltip>\r\n                 </Box>\r\n\r\n                {/* Loading State Indicator */}\r\n                {isLoading && (\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', my: 5, minHeight: '300px' }}>\r\n                        <CircularProgress size={50} />\r\n                        <Typography variant=\"h6\" color=\"text.secondary\" sx={{mt: 2}}>Loading Applications...</Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Error State Display */}\r\n                {!isLoading && error && (\r\n                    <Box sx={{ my: 3, textAlign: 'center' }}> {/* Centered error */}\r\n                        <Alert severity=\"error\" sx={{ mb: 2, justifyContent: 'center' }}>{error}</Alert>\r\n                        <Button onClick={fetchApplications} variant=\"contained\">Try Again</Button>\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Table Display (only when not loading and no error) */}\r\n                {!isLoading && !error && (\r\n                    <TableContainer component={Paper} variant=\"outlined\">\r\n                        <Table stickyHeader aria-label=\"job applications table\">\r\n                            <TableHead>\r\n                                <TableRow sx={{ '& th': { fontWeight: 'bold', backgroundColor: 'grey.200' } }}> {/* Styled header */}\r\n                                    <TableCell>Applicant Name</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>Phone</TableCell>\r\n                                    <TableCell>Desired Role</TableCell>\r\n                                    <TableCell>Applied On</TableCell>\r\n                                    <TableCell align=\"center\">Status</TableCell>\r\n                                    <TableCell align=\"center\">Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {/* Conditional Rendering: Show message or map data */}\r\n                                { !Array.isArray(applications) || applications.length === 0 ? (\r\n                                    // Display when applications is not an array or is empty\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={7} align=\"center\" sx={{ py: 5, fontStyle: 'italic', color: 'text.secondary' }}>\r\n                                            No submitted job applications found.\r\n                                         </TableCell>\r\n                                    </TableRow>\r\n                                ) : (\r\n                                    // Map and render rows only if applications is a non-empty array\r\n                                    applications.map((app, index) => (\r\n                                        <TableRow\r\n                                            hover\r\n                                            key={app.id} // Use unique ID from application data\r\n                                            sx={{\r\n                                                '&:last-child td, &:last-child th': { border: 0 },\r\n                                                backgroundColor: index % 2 !== 0 ? 'action.hover' : 'background.paper' // Alternate row bg\r\n                                             }}\r\n                                        >\r\n                                            {/* Display application data - use 'N/A' as fallback */}\r\n                                            <TableCell sx={{fontSize: '0.875rem'}}>{`${app.applicantFirstName || 'N/A'} ${app.applicantLastName || ''}`.trim()}</TableCell>\r\n                                            <TableCell sx={{fontSize: '0.875rem'}}>{app.applicantEmail || 'N/A'}</TableCell>\r\n                                            <TableCell sx={{fontSize: '0.875rem'}}>{app.applicantPhone || 'N/A'}</TableCell>\r\n                                            <TableCell sx={{fontSize: '0.875rem'}}>{app.desiredRole || 'N/A'}</TableCell>\r\n                                            <TableCell sx={{fontSize: '0.875rem'}}>{formatDateTime(app.applicationDate)}</TableCell>\r\n                                            <TableCell align=\"center\">{getStatusChip(app.status)}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {/* Action button to view details */}\r\n                                                <Tooltip title=\"View Details & Actions\">\r\n                                                    <IconButton color=\"primary\" size=\"small\" onClick={() => handleViewDetails(app.id)}>\r\n                                                        <VisibilityIcon fontSize=\"small\" />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </Paper> {/* End Content Paper */}\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}