{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\AdminDashboardPage.js\",\n  _s = $RefreshSig$();\n// --- src/pages/Admin/AdminDashboardPage.js ---\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n// Removed useAuth import as it's not directly used for token here yet\n\n// Import MUI components\nimport { Container, Typography, Box, Button, Paper, Grid, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert, Snackbar, IconButton, Tooltip } from '@mui/material';\n// Import MUI Icons (Ensure @mui/icons-material is installed)\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Define your backend API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080'; // Adjust if different\n\nexport default function AdminDashboardPage() {\n  _s();\n  const [pendingUsers, setPendingUsers] = useState([]); // State to hold list of users\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // Function to Fetch Pending Users\n  const fetchPendingUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Make GET request to the backend endpoint\n      const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\n        withCredentials: true // Send cookies/Basic Auth header if CORS allows\n      });\n      // Expect response.data to be an ARRAY now\n      if (Array.isArray(response.data)) {\n        setPendingUsers(response.data);\n      } else {\n        console.error(\"Received non-array data for pending users:\", response.data);\n        setPendingUsers([]); // Default to empty array if backend response is wrong format\n        setError(\"Received invalid data format from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching pending users:\", err);\n      // Handle potential 401/403 errors specifically if needed\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        setError(\"Access Denied. Ensure you are logged in as Admin.\");\n      } else {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to fetch pending registrations.');\n      }\n      setPendingUsers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // Empty dependency array means this function is created once\n\n  // Fetch users when component mounts\n  useEffect(() => {\n    fetchPendingUsers();\n  }, [fetchPendingUsers]); // Run effect when fetchPendingUsers is available\n\n  // Handler for Snackbar Close\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  // Show Snackbar with Message\n  const showMessage = (message, isSuccess = true) => {\n    if (isSuccess) {\n      setSuccessMessage(message);\n      setError('');\n    } else {\n      setError(message);\n      setSuccessMessage('');\n    }\n    setSnackbarOpen(true);\n  };\n\n  // Handler for Approving a user\n  const handleApprove = async customerId => {\n    setError(''); // Clear error before action\n    setSuccessMessage('');\n    try {\n      // Make POST request to approve endpoint\n      const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, {\n        withCredentials: true\n      });\n      showMessage(response.data || `User ${customerId} approved successfully!`);\n      fetchPendingUsers(); // Refresh the list\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Error approving user ${customerId}:`, err);\n      showMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || `Failed to approve user ${customerId}.`, false);\n    }\n  };\n\n  // Handler for Rejecting a user\n  const handleReject = async customerId => {\n    if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}? This cannot be undone.`)) {\n      return;\n    }\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Make POST request to reject endpoint\n      const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, {\n        withCredentials: true\n      });\n      showMessage(response.data || `User ${customerId} rejected successfully!`);\n      fetchPendingUsers(); // Refresh the list\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(`Error rejecting user ${customerId}:`, err);\n      showMessage(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || `Failed to reject user ${customerId}.`, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        },\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Pending Registrations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh List\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: fetchPendingUsers,\n              color: \"primary\",\n              disabled: isLoading,\n              children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          my: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), !isLoading && error && !snackbarOpen &&\n      /*#__PURE__*/\n      // Don't show main error if snackbar is showing related error\n      _jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), !isLoading &&\n      /*#__PURE__*/\n      // Render table structure even if there's an error, but show error message above\n      _jsxDEV(TableContainer, {\n        component: Paper,\n        elevation: 1,\n        sx: {\n          maxHeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"pending users table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '& th': {\n                  fontWeight: 'bold',\n                  backgroundColor: 'primary.light',\n                  color: 'common.white'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Customer ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Mobile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: !error && pendingUsers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                sx: {\n                  py: 3\n                },\n                children: \"No pending registrations found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 38\n            }, this) :\n            // Map users if error is not blocking display or if users exist despite error\n            pendingUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: user.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${user.fname || ''} ${user.lname || ''}`.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobileNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.accountNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Approve User\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"success\",\n                    size: \"small\",\n                    onClick: () => handleApprove(user.customerId),\n                    sx: {\n                      mr: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Reject User\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"error\",\n                    size: \"small\",\n                    onClick: () => handleReject(user.customerId),\n                    children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this)]\n            }, user.customerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 5000 // Display for 5 seconds\n      ,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: successMessage ? \"success\" : \"error\",\n        sx: {\n          width: '100%'\n        },\n        variant: \"filled\",\n        children: [successMessage || error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboardPage, \"xvfm+hNGA/xaV2TFLzO+npSTdn4=\");\n_c = AdminDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Container","Typography","Box","Button","Paper","Grid","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CircularProgress","Alert","Snackbar","IconButton","Tooltip","CheckCircleIcon","CancelIcon","RefreshIcon","jsxDEV","_jsxDEV","API_BASE_URL","AdminDashboardPage","_s","pendingUsers","setPendingUsers","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","snackbarOpen","setSnackbarOpen","fetchPendingUsers","response","get","withCredentials","Array","isArray","data","console","err","status","_err$response","_err$response$data","message","handleSnackbarClose","event","reason","showMessage","isSuccess","handleApprove","customerId","post","_err$response2","_err$response2$data","handleReject","window","confirm","_err$response3","_err$response3$data","maxWidth","sx","mt","mb","children","elevation","p","xs","md","display","justifyContent","alignItems","flexWrap","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","color","disabled","my","severity","maxHeight","stickyHeader","fontWeight","backgroundColor","align","length","colSpan","py","map","user","hover","border","scope","fname","lname","trim","email","mobileNumber","accountNumber","size","mr","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/AdminDashboardPage.js"],"sourcesContent":["// --- src/pages/Admin/AdminDashboardPage.js ---\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n// Removed useAuth import as it's not directly used for token here yet\r\n\r\n// Import MUI components\r\nimport {\r\n    Container, Typography, Box, Button, Paper, Grid,\r\n    TableContainer, Table, TableHead, TableRow, TableCell, TableBody,\r\n    CircularProgress, Alert, Snackbar, IconButton, Tooltip\r\n} from '@mui/material';\r\n// Import MUI Icons (Ensure @mui/icons-material is installed)\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\n// Define your backend API base URL\r\nconst API_BASE_URL = 'http://localhost:8080'; // Adjust if different\r\n\r\nexport default function AdminDashboardPage() {\r\n    const [pendingUsers, setPendingUsers] = useState([]); // State to hold list of users\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    // Function to Fetch Pending Users\r\n    const fetchPendingUsers = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        setSuccessMessage('');\r\n        try {\r\n            // Make GET request to the backend endpoint\r\n            const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\r\n                 withCredentials: true // Send cookies/Basic Auth header if CORS allows\r\n            });\r\n            // Expect response.data to be an ARRAY now\r\n            if (Array.isArray(response.data)) {\r\n                setPendingUsers(response.data);\r\n            } else {\r\n                console.error(\"Received non-array data for pending users:\", response.data);\r\n                setPendingUsers([]); // Default to empty array if backend response is wrong format\r\n                setError(\"Received invalid data format from server.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching pending users:\", err);\r\n            // Handle potential 401/403 errors specifically if needed\r\n            if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n                setError(\"Access Denied. Ensure you are logged in as Admin.\");\r\n            } else {\r\n                 setError(err.response?.data?.message || err.message || 'Failed to fetch pending registrations.');\r\n            }\r\n            setPendingUsers([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []); // Empty dependency array means this function is created once\r\n\r\n    // Fetch users when component mounts\r\n    useEffect(() => {\r\n        fetchPendingUsers();\r\n    }, [fetchPendingUsers]); // Run effect when fetchPendingUsers is available\r\n\r\n    // Handler for Snackbar Close\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    // Show Snackbar with Message\r\n    const showMessage = (message, isSuccess = true) => {\r\n        if (isSuccess) {\r\n            setSuccessMessage(message);\r\n            setError('');\r\n        } else {\r\n            setError(message);\r\n            setSuccessMessage('');\r\n        }\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    // Handler for Approving a user\r\n    const handleApprove = async (customerId) => {\r\n        setError(''); // Clear error before action\r\n        setSuccessMessage('');\r\n        try {\r\n            // Make POST request to approve endpoint\r\n            const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, {\r\n                 withCredentials: true\r\n            });\r\n            showMessage(response.data || `User ${customerId} approved successfully!`);\r\n            fetchPendingUsers(); // Refresh the list\r\n        } catch (err) {\r\n            console.error(`Error approving user ${customerId}:`, err);\r\n            showMessage(err.response?.data?.message || err.message || `Failed to approve user ${customerId}.`, false);\r\n        }\r\n    };\r\n\r\n    // Handler for Rejecting a user\r\n    const handleReject = async (customerId) => {\r\n        if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}? This cannot be undone.`)) {\r\n            return;\r\n        }\r\n        setError('');\r\n        setSuccessMessage('');\r\n        try {\r\n            // Make POST request to reject endpoint\r\n            const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, {\r\n                 withCredentials: true\r\n            });\r\n            showMessage(response.data || `User ${customerId} rejected successfully!`);\r\n            fetchPendingUsers(); // Refresh the list\r\n        } catch (err) {\r\n            console.error(`Error rejecting user ${customerId}:`, err);\r\n            showMessage(err.response?.data?.message || err.message || `Failed to reject user ${customerId}.`, false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            {/* Dashboard Header */}\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 }, mb: 3 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        Admin Dashboard\r\n                    </Typography>\r\n                </Box>\r\n            </Paper>\r\n\r\n            {/* Pending Approvals Section */}\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 } }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Pending Registrations\r\n                    </Typography>\r\n                    <Tooltip title=\"Refresh List\">\r\n                        <span> {/* Tooltip needs a DOM element wrapper if child is disabled */}\r\n                             <IconButton onClick={fetchPendingUsers} color=\"primary\" disabled={isLoading}>\r\n                                 <RefreshIcon />\r\n                             </IconButton>\r\n                        </span>\r\n                    </Tooltip>\r\n                </Box>\r\n\r\n                {/* Loading Indicator */}\r\n                {isLoading && (\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', my: 5 }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Error Alert */}\r\n                {!isLoading && error && !snackbarOpen && ( // Don't show main error if snackbar is showing related error\r\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n                )}\r\n\r\n                {/* Table of Pending Users */}\r\n                {!isLoading && ( // Render table structure even if there's an error, but show error message above\r\n                    <TableContainer component={Paper} elevation={1} sx={{ maxHeight: 600 }}>\r\n                        <Table stickyHeader aria-label=\"pending users table\">\r\n                            <TableHead>\r\n                                <TableRow sx={{ '& th': { fontWeight: 'bold', backgroundColor: 'primary.light', color: 'common.white' } }}>\r\n                                    <TableCell>Customer ID</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>Mobile</TableCell>\r\n                                    <TableCell>Account No</TableCell>\r\n                                    <TableCell align=\"center\">Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {/* Show message only if no error and no users */}\r\n                                {!error && pendingUsers.length === 0 ? (\r\n                                     <TableRow>\r\n                                         <TableCell colSpan={6} align=\"center\" sx={{ py: 3 }}>No pending registrations found.</TableCell>\r\n                                     </TableRow>\r\n                                ) : (\r\n                                    // Map users if error is not blocking display or if users exist despite error\r\n                                    pendingUsers.map((user) => (\r\n                                        <TableRow\r\n                                            hover\r\n                                            key={user.customerId}\r\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\">{user.customerId}</TableCell>\r\n                                            <TableCell>{`${user.fname || ''} ${user.lname || ''}`.trim()}</TableCell>\r\n                                            <TableCell>{user.email}</TableCell>\r\n                                            <TableCell>{user.mobileNumber}</TableCell>\r\n                                            <TableCell>{user.accountNumber}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Tooltip title=\"Approve User\">\r\n                                                    <IconButton\r\n                                                        color=\"success\"\r\n                                                        size=\"small\"\r\n                                                        onClick={() => handleApprove(user.customerId)}\r\n                                                        sx={{ mr: 0.5 }}\r\n                                                    >\r\n                                                        <CheckCircleIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                 <Tooltip title=\"Reject User\">\r\n                                                    <IconButton\r\n                                                        color=\"error\"\r\n                                                        size=\"small\"\r\n                                                        onClick={() => handleReject(user.customerId)}\r\n                                                    >\r\n                                                        <CancelIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </Paper>\r\n\r\n            {/* Snackbar for Success/Error Messages from Actions */}\r\n             <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={5000} // Display for 5 seconds\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n             >\r\n                {/* Render Alert inside Snackbar for styling */}\r\n                <Alert onClose={handleSnackbarClose} severity={successMessage ? \"success\" : \"error\"} sx={{ width: '100%' }} variant=\"filled\">\r\n                    {successMessage || error} {/* Show success message or error message */}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n             {/* Add sections/links for other admin functionalities here */}\r\n\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}