{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Fd.js\",\n  _s = $RefreshSig$();\n// this page is for apply FD by customer\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Box, TextField, Button, CircularProgress, Alert, Grid, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\n\n// Example FD Terms (In a real app, ideally fetch these from the backend or a config file)\nconst fdTerms = [{\n  months: 6,\n  label: '6 Months',\n  minAmount: 1000,\n  indicativeRate: 5.5\n}, {\n  months: 12,\n  label: '1 Year',\n  minAmount: 1000,\n  indicativeRate: 6.0\n}, {\n  months: 24,\n  label: '2 Years',\n  minAmount: 2000,\n  indicativeRate: 6.25\n}, {\n  months: 36,\n  label: '3 Years',\n  minAmount: 5000,\n  indicativeRate: 6.5\n}, {\n  months: 60,\n  label: '5 Years',\n  minAmount: 10000,\n  indicativeRate: 6.75\n}];\nexport default function ApplyFdPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    authState\n  } = useAuth();\n  const [principalAmount, setPrincipalAmount] = useState('');\n  const [termInMonths, setTermInMonths] = useState('');\n  const [selectedTermDetails, setSelectedTermDetails] = useState(null); // To store minAmount & rate\n  const [customerBalance, setCustomerBalance] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetchingBalance, setIsFetchingBalance] = useState(true);\n  const [feedback, setFeedback] = useState({\n    type: '',\n    message: ''\n  });\n\n  // Fetch customer's current balance on component mount\n  useEffect(() => {\n    const fetchBalance = async () => {\n      if (!authState.isLoggedIn) {\n        setIsFetchingBalance(false);\n        return;\n      }\n      setIsFetchingBalance(true);\n      try {\n        var _response$data;\n        const response = await axios.get(`${API_BASE_URL}/check-balance`, {\n          withCredentials: true\n        });\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success && response.data.balance !== undefined) {\n          setCustomerBalance(parseFloat(response.data.balance));\n        } else {\n          setFeedback({\n            type: 'warning',\n            message: 'Could not fetch current account balance.'\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching balance:\", error);\n        setFeedback({\n          type: 'error',\n          message: 'Error fetching account balance. Please try again later.'\n        });\n      } finally {\n        setIsFetchingBalance(false);\n      }\n    };\n    fetchBalance();\n  }, [authState.isLoggedIn]);\n\n  // Handle term selection change\n  const handleTermChange = event => {\n    const selectedMonths = event.target.value;\n    setTermInMonths(selectedMonths);\n    const termDetail = fdTerms.find(term => term.months === parseInt(selectedMonths, 10));\n    setSelectedTermDetails(termDetail || null);\n    setFeedback({\n      type: '',\n      message: ''\n    }); // Clear previous feedback\n  };\n\n  // Handle amount input change\n  const handleAmountChange = event => {\n    setPrincipalAmount(event.target.value);\n    setFeedback({\n      type: '',\n      message: ''\n    }); // Clear feedback\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setFeedback({\n      type: '',\n      message: ''\n    });\n    const amount = parseFloat(principalAmount);\n\n    // --- Frontend Validation ---\n    let validationError = '';\n    if (!termInMonths) validationError = 'Please select a term for the Fixed Deposit.';else if (isNaN(amount) || amount <= 0) validationError = 'Please enter a valid positive amount.';else if (selectedTermDetails && amount < selectedTermDetails.minAmount) {\n      validationError = `Minimum amount for the selected term (${selectedTermDetails.label}) is ₹${selectedTermDetails.minAmount.toLocaleString()}.`;\n    } else if (customerBalance !== null && amount > customerBalance) {\n      validationError = `Insufficient account balance (Available: ₹${customerBalance.toLocaleString()}).`;\n    }\n    if (validationError) {\n      setFeedback({\n        type: 'error',\n        message: validationError\n      });\n      setIsLoading(false);\n      return;\n    }\n    // --- End Validation ---\n\n    try {\n      var _response$data2;\n      // API Call to apply for FD\n      const response = await axios.post(`${API_BASE_URL}/fd/apply`, {\n        principalAmount: amount,\n        termInMonths: parseInt(termInMonths, 10)\n      }, {\n        withCredentials: true\n      } // Send auth cookies\n      );\n\n      // Handle Success\n      if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.success) {\n        setFeedback({\n          type: 'success',\n          message: response.data.message || 'FD application submitted successfully! Awaiting approval.'\n        });\n        setPrincipalAmount('');\n        setTermInMonths('');\n        setSelectedTermDetails(null);\n        // Redirect after a short delay\n        setTimeout(() => navigate('/my-fds'), 2500);\n      } else {\n        var _response$data3;\n        // Handle backend indicating failure\n        throw new Error(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.message) || 'Failed to submit FD application.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // Handle API errors\n      console.error(\"FD Application error:\", err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'An error occurred during submission.';\n      setFeedback({\n        type: 'error',\n        message: errorMsg\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Check if user is logged in\n  if (!authState.isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: \"Please log in to apply for a Fixed Deposit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Render the form\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 4\n        },\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Apply for Fixed Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 72\n          }, this),\n          onClick: () => navigate('/header'),\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), isFetchingBalance ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Fetching account balance...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : customerBalance !== null && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        variant: \"outlined\",\n        children: [\"Your current savings account balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"\\u20B9\", customerBalance.toLocaleString('en-IN', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), feedback.message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: feedback.type || 'info',\n        sx: {\n          mb: 2\n        },\n        variant: \"outlined\",\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Principal Amount (\\u20B9) *\",\n              id: \"principalAmount\",\n              name: \"principalAmount\",\n              type: \"number\",\n              value: principalAmount,\n              onChange: handleAmountChange,\n              fullWidth: true,\n              required: true,\n              disabled: isLoading || isFetchingBalance,\n              error: selectedTermDetails && parseFloat(principalAmount) < selectedTermDetails.minAmount && principalAmount !== '' || customerBalance !== null && parseFloat(principalAmount) > customerBalance,\n              helperText: customerBalance !== null && parseFloat(principalAmount) > customerBalance ? `Amount exceeds available balance.` : selectedTermDetails && parseFloat(principalAmount) < selectedTermDetails.minAmount && principalAmount !== '' ? `Min. amount for this term: ₹${selectedTermDetails.minAmount.toLocaleString()}` : \"Enter the amount you wish to deposit.\",\n              InputProps: {\n                inputProps: {\n                  min: 0\n                }\n              },\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: !termInMonths && feedback.type === 'error',\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"term-select-label\",\n                children: \"Select Term *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"term-select-label\",\n                id: \"termInMonths\",\n                name: \"termInMonths\",\n                value: termInMonths,\n                label: \"Select Term *\",\n                onChange: handleTermChange,\n                disabled: isLoading || isFetchingBalance,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Select a duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 38\n                }, this), fdTerms.map(term => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: term.months,\n                  children: [term.label, \" (Min: \\u20B9\", term.minAmount.toLocaleString(), \", Rate: \", term.indicativeRate, \"%)\"]\n                }, term.months, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 26\n          }, this), selectedTermDetails && principalAmount && parseFloat(principalAmount) >= selectedTermDetails.minAmount && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Indicative Interest Rate: \", selectedTermDetails.indicativeRate, \"% p.a. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 107\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mt: 2,\n                px: 5\n              },\n              disabled: isLoading || isFetchingBalance,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 46\n              }, this) : 'Submit FD Application'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n_s(ApplyFdPage, \"MipXkSZi+78geNV/fKk8jMb9Atc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ApplyFdPage;\nvar _c;\n$RefreshReg$(_c, \"ApplyFdPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Paper","Typography","Box","TextField","Button","CircularProgress","Alert","Grid","MenuItem","Select","InputLabel","FormControl","useNavigate","useAuth","ArrowBackIcon","jsxDEV","_jsxDEV","API_BASE_URL","fdTerms","months","label","minAmount","indicativeRate","ApplyFdPage","_s","navigate","authState","principalAmount","setPrincipalAmount","termInMonths","setTermInMonths","selectedTermDetails","setSelectedTermDetails","customerBalance","setCustomerBalance","isLoading","setIsLoading","isFetchingBalance","setIsFetchingBalance","feedback","setFeedback","type","message","fetchBalance","isLoggedIn","_response$data","response","get","withCredentials","data","success","balance","undefined","parseFloat","error","console","handleTermChange","event","selectedMonths","target","value","termDetail","find","term","parseInt","handleAmountChange","handleSubmit","e","preventDefault","amount","validationError","isNaN","toLocaleString","_response$data2","post","setTimeout","_response$data3","Error","err","_err$response","_err$response$data","errorMsg","maxWidth","sx","mt","children","elevation","p","textAlign","severity","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","mb","xs","sm","borderRadius","display","justifyContent","alignItems","component","fontWeight","size","startIcon","mr","color","minimumFractionDigits","maximumFractionDigits","onSubmit","noValidate","container","spacing","item","id","name","onChange","fullWidth","required","disabled","helperText","InputProps","inputProps","min","autoFocus","labelId","map","px","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Fd.js"],"sourcesContent":["// this page is for apply FD by customer\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    Container, Paper, Typography, Box, TextField, Button, CircularProgress, Alert, Grid, MenuItem, Select, InputLabel, FormControl\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\n// Example FD Terms (In a real app, ideally fetch these from the backend or a config file)\r\nconst fdTerms = [\r\n    { months: 6, label: '6 Months', minAmount: 1000, indicativeRate: 5.5 },\r\n    { months: 12, label: '1 Year', minAmount: 1000, indicativeRate: 6.0 },\r\n    { months: 24, label: '2 Years', minAmount: 2000, indicativeRate: 6.25 },\r\n    { months: 36, label: '3 Years', minAmount: 5000, indicativeRate: 6.5 },\r\n    { months: 60, label: '5 Years', minAmount: 10000, indicativeRate: 6.75 },\r\n];\r\n\r\nexport default function ApplyFdPage() {\r\n    const navigate = useNavigate();\r\n    const { authState } = useAuth();\r\n    const [principalAmount, setPrincipalAmount] = useState('');\r\n    const [termInMonths, setTermInMonths] = useState('');\r\n    const [selectedTermDetails, setSelectedTermDetails] = useState(null); // To store minAmount & rate\r\n    const [customerBalance, setCustomerBalance] = useState(null);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isFetchingBalance, setIsFetchingBalance] = useState(true);\r\n    const [feedback, setFeedback] = useState({ type: '', message: '' });\r\n\r\n    // Fetch customer's current balance on component mount\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            if (!authState.isLoggedIn) {\r\n                setIsFetchingBalance(false);\r\n                return;\r\n            }\r\n            setIsFetchingBalance(true);\r\n            try {\r\n                const response = await axios.get(`${API_BASE_URL}/check-balance`, { withCredentials: true });\r\n                if (response.data?.success && response.data.balance !== undefined) {\r\n                    setCustomerBalance(parseFloat(response.data.balance));\r\n                } else {\r\n                    setFeedback({ type: 'warning', message: 'Could not fetch current account balance.' });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching balance:\", error);\r\n                setFeedback({ type: 'error', message: 'Error fetching account balance. Please try again later.' });\r\n            } finally {\r\n                setIsFetchingBalance(false);\r\n            }\r\n        };\r\n        fetchBalance();\r\n    }, [authState.isLoggedIn]);\r\n\r\n    // Handle term selection change\r\n    const handleTermChange = (event) => {\r\n        const selectedMonths = event.target.value;\r\n        setTermInMonths(selectedMonths);\r\n        const termDetail = fdTerms.find(term => term.months === parseInt(selectedMonths, 10));\r\n        setSelectedTermDetails(termDetail || null);\r\n        setFeedback({ type: '', message: '' }); // Clear previous feedback\r\n    };\r\n\r\n    // Handle amount input change\r\n     const handleAmountChange = (event) => {\r\n         setPrincipalAmount(event.target.value);\r\n         setFeedback({ type: '', message: '' }); // Clear feedback\r\n     };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setFeedback({ type: '', message: '' });\r\n\r\n        const amount = parseFloat(principalAmount);\r\n\r\n        // --- Frontend Validation ---\r\n        let validationError = '';\r\n        if (!termInMonths) validationError = 'Please select a term for the Fixed Deposit.';\r\n        else if (isNaN(amount) || amount <= 0) validationError = 'Please enter a valid positive amount.';\r\n        else if (selectedTermDetails && amount < selectedTermDetails.minAmount) {\r\n            validationError = `Minimum amount for the selected term (${selectedTermDetails.label}) is ₹${selectedTermDetails.minAmount.toLocaleString()}.`;\r\n        } else if (customerBalance !== null && amount > customerBalance) {\r\n            validationError = `Insufficient account balance (Available: ₹${customerBalance.toLocaleString()}).`;\r\n        }\r\n\r\n        if (validationError) {\r\n            setFeedback({ type: 'error', message: validationError });\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        // --- End Validation ---\r\n\r\n        try {\r\n            // API Call to apply for FD\r\n            const response = await axios.post(\r\n                `${API_BASE_URL}/fd/apply`,\r\n                { principalAmount: amount, termInMonths: parseInt(termInMonths, 10) },\r\n                { withCredentials: true } // Send auth cookies\r\n            );\r\n\r\n            // Handle Success\r\n            if (response.data?.success) {\r\n                setFeedback({ type: 'success', message: response.data.message || 'FD application submitted successfully! Awaiting approval.' });\r\n                setPrincipalAmount('');\r\n                setTermInMonths('');\r\n                setSelectedTermDetails(null);\r\n                // Redirect after a short delay\r\n                setTimeout(() => navigate('/my-fds'), 2500);\r\n            } else {\r\n                // Handle backend indicating failure\r\n                throw new Error(response.data?.message || 'Failed to submit FD application.');\r\n            }\r\n        } catch (err) {\r\n            // Handle API errors\r\n            console.error(\"FD Application error:\", err);\r\n            const errorMsg = err.response?.data?.message || err.message || 'An error occurred during submission.';\r\n            setFeedback({ type: 'error', message: errorMsg });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Check if user is logged in\r\n    if (!authState.isLoggedIn) {\r\n         return (\r\n            <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n                <Paper elevation={3} sx={{ p: 3, textAlign: 'center' }}>\r\n                    <Alert severity=\"warning\">Please log in to apply for a Fixed Deposit.</Alert>\r\n                    <Button variant=\"contained\" sx={{mt: 2}} onClick={() => navigate('/login')}>Login</Button>\r\n                 </Paper>\r\n            </Container>\r\n         );\r\n     }\r\n\r\n    // Render the form\r\n    return (\r\n        <Container maxWidth=\"sm\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper elevation={3} sx={{ p: { xs: 2, sm: 4 }, borderRadius: 2 }}>\r\n                {/* Header with Back Button */}\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                    <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 'bold' }}>\r\n                        Apply for Fixed Deposit\r\n                    </Typography>\r\n                    <Button variant=\"outlined\" size=\"small\" startIcon={<ArrowBackIcon />} onClick={() => navigate('/header')}>\r\n                        My Account\r\n                    </Button>\r\n                </Box>\r\n\r\n                {/* Balance Information */}\r\n                {isFetchingBalance ? (\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\r\n                        <CircularProgress size={20} sx={{ mr: 1 }} />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">Fetching account balance...</Typography>\r\n                    </Box>\r\n                ) : customerBalance !== null && (\r\n                    <Alert severity=\"info\" sx={{ mb: 2 }} variant=\"outlined\">\r\n                         Your current savings account balance: <strong>₹{customerBalance.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</strong>\r\n                     </Alert>\r\n                 )}\r\n\r\n                {/* Feedback Alert */}\r\n                {feedback.message && (\r\n                    <Alert severity={feedback.type || 'info'} sx={{ mb: 2 }} variant=\"outlined\">\r\n                        {feedback.message}\r\n                    </Alert>\r\n                )}\r\n\r\n                {/* FD Application Form */}\r\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                label=\"Principal Amount (₹) *\"\r\n                                id=\"principalAmount\"\r\n                                name=\"principalAmount\"\r\n                                type=\"number\"\r\n                                value={principalAmount}\r\n                                onChange={handleAmountChange}\r\n                                fullWidth\r\n                                required\r\n                                disabled={isLoading || isFetchingBalance}\r\n                                error={ (selectedTermDetails && parseFloat(principalAmount) < selectedTermDetails.minAmount && principalAmount !== '') || (customerBalance !== null && parseFloat(principalAmount) > customerBalance) }\r\n                                helperText={\r\n                                    (customerBalance !== null && parseFloat(principalAmount) > customerBalance) ? `Amount exceeds available balance.` :\r\n                                    (selectedTermDetails && parseFloat(principalAmount) < selectedTermDetails.minAmount && principalAmount !== '') ? `Min. amount for this term: ₹${selectedTermDetails.minAmount.toLocaleString()}` :\r\n                                    \"Enter the amount you wish to deposit.\"\r\n                                }\r\n                                InputProps={{ inputProps: { min: 0 } }}\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                         <Grid item xs={12}>\r\n                            <FormControl fullWidth required error={!termInMonths && feedback.type === 'error'}>\r\n                                 <InputLabel id=\"term-select-label\">Select Term *</InputLabel>\r\n                                 <Select\r\n                                    labelId=\"term-select-label\"\r\n                                    id=\"termInMonths\"\r\n                                    name=\"termInMonths\"\r\n                                    value={termInMonths}\r\n                                    label=\"Select Term *\"\r\n                                    onChange={handleTermChange}\r\n                                    disabled={isLoading || isFetchingBalance}\r\n                                >\r\n                                     <MenuItem value=\"\" disabled><em>Select a duration</em></MenuItem>\r\n                                     {fdTerms.map((term) => (\r\n                                        <MenuItem key={term.months} value={term.months}>\r\n                                             {term.label} (Min: ₹{term.minAmount.toLocaleString()}, Rate: {term.indicativeRate}%)\r\n                                         </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {/* Indicative Interest and Maturity (Optional Display) */}\r\n                        {selectedTermDetails && principalAmount && parseFloat(principalAmount) >= selectedTermDetails.minAmount && (\r\n                             <Grid item xs={12}>\r\n                                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                     Indicative Interest Rate: {selectedTermDetails.indicativeRate}% p.a. <br />\r\n                                     {/* Note: Actual maturity amount is calculated by backend on approval */}\r\n                                 </Typography>\r\n                             </Grid>\r\n                         )}\r\n\r\n                         <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                sx={{ mt: 2, px: 5 }}\r\n                                disabled={isLoading || isFetchingBalance}\r\n                            >\r\n                                {isLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Submit FD Application'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}