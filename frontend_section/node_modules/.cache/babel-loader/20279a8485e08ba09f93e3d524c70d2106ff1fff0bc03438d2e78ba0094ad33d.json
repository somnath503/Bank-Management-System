{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\PendingApprovaslPage.js\",\n  _s = $RefreshSig$();\n// --- src/pages/Admin/PendingApprovalsPage.js ---\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../../../context/AuthContext'; // To potentially get token/credentials later\n\n// Import MUI components\nimport { Container, Typography, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button, CircularProgress, Alert, Snackbar, Box } from '@mui/material';\n\n// Base URL for your backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nexport default function PendingApprovalsPage() {\n  _s();\n  const [pendingUsers, setPendingUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const {\n    authState\n  } = useAuth(); // Get auth state if needed for token\n\n  // Function to fetch pending users\n  const fetchPendingUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // *** IMPORTANT: Authentication Header Needed ***\n      // How you get the token/credentials depends on your auth implementation (Basic Auth, JWT, etc.)\n      // Example for Basic Auth (less common for browser JS, more for server-server or testing like Postman):\n      // const credentials = btoa(`${authState.customerId}:${authState.password}`); // NEVER store plain password in state/localStorage!\n      // const headers = { 'Authorization': `Basic ${credentials}` };\n\n      // Example placeholder for JWT token (if stored in authState or localStorage):\n      // const token = authState.token || localStorage.getItem('jwtToken');\n      // if (!token) throw new Error(\"Authentication token not found.\");\n      // const headers = { 'Authorization': `Bearer ${token}` };\n\n      // --- TEMPORARY: Assume Basic Auth setup in browser or CORS allows credentials ---\n      // Axios can sometimes handle Basic Auth automatically if configured with `withCredentials: true`\n      // AND if the backend CORS allows credentials. Let's try withCredentials first.\n      const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\n        withCredentials: true // Send cookies/auth headers if CORS allows\n      });\n      setPendingUsers(response.data || []); // Ensure it's an array\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error fetching pending users:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || 'Failed to fetch pending users. Ensure you are logged in as Admin.');\n      setPendingUsers([]); // Clear users on error\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // No dependencies needed if authState is stable for token\n\n  // Fetch users when component mounts\n  useEffect(() => {\n    fetchPendingUsers();\n  }, [fetchPendingUsers]);\n\n  // Handler for Approving a user\n  const handleApprove = async customerId => {\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Again, include auth headers/credentials\n      const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, {\n        // No request body needed\n        withCredentials: true // Try sending credentials\n      });\n      setSuccessMessage(response.data || `User ${customerId} approved successfully!`);\n      // Refresh the list after approval\n      fetchPendingUsers();\n    } catch (err) {\n      var _err$response2;\n      console.error(`Error approving user ${customerId}:`, err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message || `Failed to approve user ${customerId}.`);\n    }\n  };\n\n  // Handler for Rejecting a user\n  const handleReject = async customerId => {\n    // Optional: Add a confirmation dialog before rejecting\n    if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}?`)) {\n      return;\n    }\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Include auth headers/credentials\n      const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, {\n        // No request body needed\n        withCredentials: true // Try sending credentials\n      });\n      setSuccessMessage(response.data || `User ${customerId} rejected successfully!`);\n      // Refresh the list after rejection\n      fetchPendingUsers();\n    } catch (err) {\n      var _err$response3;\n      console.error(`Error rejecting user ${customerId}:`, err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message || `Failed to reject user ${customerId}.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      textAlign: \"center\",\n      color: \"dark\",\n      children: \"Pending Customer Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!successMessage,\n      autoHideDuration: 6000,\n      onClose: () => setSuccessMessage(''),\n      message: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 14\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 600\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"pending users table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Customer ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Mobile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pendingUsers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                children: \"No pending registrations found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 38\n            }, this) : pendingUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${user.fname} ${user.lname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobileNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.accountNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"success\",\n                  size: \"small\",\n                  onClick: () => handleApprove(user.customerId),\n                  sx: {\n                    mr: 1\n                  },\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => handleReject(user.customerId),\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this)]\n            }, user.customerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(PendingApprovalsPage, \"SFLEcrxHUlCX30I+chBkon6SJnc=\", false, function () {\n  return [useAuth];\n});\n_c = PendingApprovalsPage;\nvar _c;\n$RefreshReg$(_c, \"PendingApprovalsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useAuth","Container","Typography","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Button","CircularProgress","Alert","Snackbar","Box","jsxDEV","_jsxDEV","API_BASE_URL","PendingApprovalsPage","_s","pendingUsers","setPendingUsers","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","authState","fetchPendingUsers","response","get","withCredentials","data","err","_err$response","console","message","handleApprove","customerId","post","_err$response2","handleReject","window","confirm","_err$response3","maxWidth","sx","mt","mb","children","variant","component","gutterBottom","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","my","severity","open","autoHideDuration","onClose","width","overflow","maxHeight","stickyHeader","length","colSpan","align","map","user","hover","fname","lname","email","mobileNumber","accountNumber","size","onClick","mr","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/PendingApprovaslPage.js"],"sourcesContent":["// --- src/pages/Admin/PendingApprovalsPage.js ---\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../../../context/AuthContext'; // To potentially get token/credentials later\r\n\r\n// Import MUI components\r\nimport {\r\n    Container, Typography, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button,\r\n    CircularProgress, Alert, Snackbar, Box\r\n} from '@mui/material';\r\n\r\n// Base URL for your backend\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\nexport default function PendingApprovalsPage() {\r\n    const [pendingUsers, setPendingUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const { authState } = useAuth(); // Get auth state if needed for token\r\n\r\n    // Function to fetch pending users\r\n    const fetchPendingUsers = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            // *** IMPORTANT: Authentication Header Needed ***\r\n            // How you get the token/credentials depends on your auth implementation (Basic Auth, JWT, etc.)\r\n            // Example for Basic Auth (less common for browser JS, more for server-server or testing like Postman):\r\n            // const credentials = btoa(`${authState.customerId}:${authState.password}`); // NEVER store plain password in state/localStorage!\r\n            // const headers = { 'Authorization': `Basic ${credentials}` };\r\n\r\n            // Example placeholder for JWT token (if stored in authState or localStorage):\r\n            // const token = authState.token || localStorage.getItem('jwtToken');\r\n            // if (!token) throw new Error(\"Authentication token not found.\");\r\n            // const headers = { 'Authorization': `Bearer ${token}` };\r\n\r\n            // --- TEMPORARY: Assume Basic Auth setup in browser or CORS allows credentials ---\r\n            // Axios can sometimes handle Basic Auth automatically if configured with `withCredentials: true`\r\n            // AND if the backend CORS allows credentials. Let's try withCredentials first.\r\n            const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\r\n                 withCredentials: true // Send cookies/auth headers if CORS allows\r\n            });\r\n\r\n            setPendingUsers(response.data || []); // Ensure it's an array\r\n\r\n        } catch (err) {\r\n            console.error(\"Error fetching pending users:\", err);\r\n            setError(err.response?.data || err.message || 'Failed to fetch pending users. Ensure you are logged in as Admin.');\r\n            setPendingUsers([]); // Clear users on error\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []); // No dependencies needed if authState is stable for token\r\n\r\n    // Fetch users when component mounts\r\n    useEffect(() => {\r\n        fetchPendingUsers();\r\n    }, [fetchPendingUsers]);\r\n\r\n    // Handler for Approving a user\r\n    const handleApprove = async (customerId) => {\r\n        setError('');\r\n        setSuccessMessage('');\r\n        try {\r\n            // Again, include auth headers/credentials\r\n            const response = await axios.post(`${API_BASE_URL}/admin/approve/${customerId}`, null, { // No request body needed\r\n                 withCredentials: true // Try sending credentials\r\n            });\r\n            setSuccessMessage(response.data || `User ${customerId} approved successfully!`);\r\n            // Refresh the list after approval\r\n            fetchPendingUsers();\r\n        } catch (err) {\r\n            console.error(`Error approving user ${customerId}:`, err);\r\n            setError(err.response?.data || err.message || `Failed to approve user ${customerId}.`);\r\n        }\r\n    };\r\n\r\n    // Handler for Rejecting a user\r\n    const handleReject = async (customerId) => {\r\n        // Optional: Add a confirmation dialog before rejecting\r\n        if (!window.confirm(`Are you sure you want to reject and remove user ${customerId}?`)) {\r\n            return;\r\n        }\r\n\r\n        setError('');\r\n        setSuccessMessage('');\r\n        try {\r\n            // Include auth headers/credentials\r\n            const response = await axios.post(`${API_BASE_URL}/admin/reject/${customerId}`, null, { // No request body needed\r\n                 withCredentials: true // Try sending credentials\r\n            });\r\n            setSuccessMessage(response.data || `User ${customerId} rejected successfully!`);\r\n            // Refresh the list after rejection\r\n            fetchPendingUsers();\r\n        } catch (err) {\r\n            console.error(`Error rejecting user ${customerId}:`, err);\r\n            setError(err.response?.data || err.message || `Failed to reject user ${customerId}.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom textAlign='center' color='dark'>\r\n                Pending Customer Approvals\r\n            </Typography>\r\n\r\n            {/* Loading Indicator */}\r\n            {isLoading && (\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            )}\r\n\r\n            {/* Error Alert */}\r\n            {error && (\r\n                <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n            )}\r\n\r\n            {/* Success Snackbar */}\r\n             <Snackbar\r\n                open={!!successMessage}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSuccessMessage('')}\r\n                message={successMessage}\r\n             />\r\n\r\n            {/* Table of Pending Users */}\r\n            {!isLoading && !error && (\r\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                    <TableContainer sx={{ maxHeight: 600 }}> {/* Optional: Limit height */}\r\n                        <Table stickyHeader aria-label=\"pending users table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Customer ID</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>Mobile</TableCell>\r\n                                    <TableCell>Account No</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {pendingUsers.length === 0 ? (\r\n                                     <TableRow>\r\n                                         <TableCell colSpan={6} align=\"center\">No pending registrations found.</TableCell>\r\n                                     </TableRow>\r\n                                ) : (\r\n                                    pendingUsers.map((user) => (\r\n                                        <TableRow hover key={user.customerId}>\r\n                                            <TableCell>{user.customerId}</TableCell>\r\n                                            <TableCell>{`${user.fname} ${user.lname}`}</TableCell>\r\n                                            <TableCell>{user.email}</TableCell>\r\n                                            <TableCell>{user.mobileNumber}</TableCell>\r\n                                            <TableCell>{user.accountNumber}</TableCell>\r\n                                            <TableCell>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"success\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleApprove(user.customerId)}\r\n                                                    sx={{ mr: 1 }}\r\n                                                >\r\n                                                    Approve\r\n                                                </Button>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"error\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleReject(user.customerId)}\r\n                                                >\r\n                                                    Reject\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            )}\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}