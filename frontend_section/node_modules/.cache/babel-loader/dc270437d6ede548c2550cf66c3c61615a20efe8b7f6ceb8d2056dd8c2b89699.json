{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\AdminDashboardPage.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/Admin/AdminDashboardPage.js ---\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios'; // Import axios for API calls\n\n// Import MUI components\nimport { Container, Typography, Box, Button, Paper, Grid, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert, Snackbar, IconButton, Tooltip } from '@mui/material';\n// Import MUI Icons (Ensure @mui/icons-material is installed: npm install @mui/icons-material)\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Define your backend API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080'; // Adjust if different\n\nexport default function AdminDashboardPage() {\n  _s();\n  const [pendingUsers, setPendingUsers] = useState([]); // State for pending users list\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(''); // For general fetch errors\n  const [actionMessage, setActionMessage] = useState({\n    type: '',\n    text: ''\n  }); // For approve/reject feedback\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // --- Function to Fetch Pending Users ---\n  const fetchPendingUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // GET request to the secured backend endpoint\n      // Assumes authentication is handled (e.g., via cookies with `withCredentials`\n      // or a global Axios interceptor adding an Authorization header)\n      const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\n        withCredentials: true // Important for sending auth cookies/headers\n      });\n      if (Array.isArray(response.data)) {\n        setPendingUsers(response.data);\n      } else {\n        console.error(\"Received non-array data for pending users:\", response.data);\n        setError(\"Received invalid data format from server.\");\n        setPendingUsers([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching pending users:\", err);\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        setError(\"Access Denied. Ensure you are logged in as Admin.\");\n      } else {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to fetch pending registrations.');\n      }\n      setPendingUsers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // useCallback dependency array is empty\n\n  // Fetch users when component first loads\n  useEffect(() => {\n    fetchPendingUsers();\n  }, [fetchPendingUsers]);\n\n  // --- Snackbar Handler ---\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbarOpen(false);\n  };\n\n  // --- Action Handlers (Approve/Reject) ---\n  const handleAction = async (actionType, customerId) => {\n    const endpoint = actionType === 'approve' ? `/admin/approve/${customerId}` : `/admin/reject/${customerId}`;\n    const confirmationMessage = actionType === 'reject' ? `Are you sure you want to reject and remove user ${customerId}? This cannot be undone.` : null;\n    if (confirmationMessage && !window.confirm(confirmationMessage)) {\n      return; // User cancelled rejection\n    }\n    setActionMessage({\n      type: '',\n      text: ''\n    }); // Clear previous action message\n    try {\n      // POST request to the backend action endpoint\n      const response = await axios.post(`${API_BASE_URL}${endpoint}`, null, {\n        withCredentials: true\n      });\n      setActionMessage({\n        type: 'success',\n        text: response.data || `User ${customerId} ${actionType}d successfully!`\n      });\n      setSnackbarOpen(true);\n      fetchPendingUsers(); // Refresh the list after action\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Error ${actionType}ing user ${customerId}:`, err);\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || `Failed to ${actionType} user ${customerId}.`;\n      setActionMessage({\n        type: 'error',\n        text: errorMsg\n      });\n      setSnackbarOpen(true);\n    }\n  };\n\n  // --- Render Logic ---\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        },\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Pending Registrations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh List\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: fetchPendingUsers,\n              color: \"primary\",\n              disabled: isLoading,\n              children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          my: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        elevation: 1,\n        sx: {\n          maxHeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"pending users table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '& th': {\n                  fontWeight: 'bold',\n                  backgroundColor: 'primary.light',\n                  color: 'common.white'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Customer ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Mobile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pendingUsers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                sx: {\n                  py: 3\n                },\n                children: \"No pending registrations found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 38\n            }, this) : pendingUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: user.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${user.fname || ''} ${user.lname || ''}`.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobileNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.accountNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Approve User\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"success\",\n                    size: \"small\",\n                    onClick: () => handleAction('approve', user.customerId),\n                    sx: {\n                      mr: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Reject User\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"error\",\n                    size: \"small\",\n                    onClick: () => handleAction('reject', user.customerId),\n                    children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 45\n              }, this)]\n            }, user.customerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 5000 // Display for 5 seconds\n      ,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: actionMessage.type || 'info',\n        sx: {\n          width: '100%'\n        },\n        variant: \"filled\",\n        children: actionMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboardPage, \"Bu20U/bbxyuwaqpUZsPkvgbJv14=\");\n_c = AdminDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Container","Typography","Box","Button","Paper","Grid","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CircularProgress","Alert","Snackbar","IconButton","Tooltip","CheckCircleIcon","CancelIcon","RefreshIcon","jsxDEV","_jsxDEV","API_BASE_URL","AdminDashboardPage","_s","pendingUsers","setPendingUsers","isLoading","setIsLoading","error","setError","actionMessage","setActionMessage","type","text","snackbarOpen","setSnackbarOpen","fetchPendingUsers","response","get","withCredentials","Array","isArray","data","console","err","status","_err$response","_err$response$data","message","handleSnackbarClose","event","reason","handleAction","actionType","customerId","endpoint","confirmationMessage","window","confirm","post","_err$response2","_err$response2$data","errorMsg","maxWidth","sx","mt","mb","children","elevation","p","xs","md","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","title","onClick","color","disabled","my","severity","maxHeight","stickyHeader","fontWeight","backgroundColor","length","colSpan","py","map","user","hover","scope","fname","lname","trim","email","mobileNumber","accountNumber","size","mr","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/AdminDashboardPage.js"],"sourcesContent":["// --- src/component/Page/Admin/AdminDashboardPage.js ---\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios'; // Import axios for API calls\r\n\r\n// Import MUI components\r\nimport {\r\n    Container, Typography, Box, Button, Paper, Grid,\r\n    TableContainer, Table, TableHead, TableRow, TableCell, TableBody,\r\n    CircularProgress, Alert, Snackbar, IconButton, Tooltip\r\n} from '@mui/material';\r\n// Import MUI Icons (Ensure @mui/icons-material is installed: npm install @mui/icons-material)\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\n// Define your backend API base URL\r\nconst API_BASE_URL = 'http://localhost:8080'; // Adjust if different\r\n\r\nexport default function AdminDashboardPage() {\r\n    const [pendingUsers, setPendingUsers] = useState([]); // State for pending users list\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(''); // For general fetch errors\r\n    const [actionMessage, setActionMessage] = useState({ type: '', text: '' }); // For approve/reject feedback\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    // --- Function to Fetch Pending Users ---\r\n    const fetchPendingUsers = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            // GET request to the secured backend endpoint\r\n            // Assumes authentication is handled (e.g., via cookies with `withCredentials`\r\n            // or a global Axios interceptor adding an Authorization header)\r\n            const response = await axios.get(`${API_BASE_URL}/admin/pending`, {\r\n                 withCredentials: true // Important for sending auth cookies/headers\r\n            });\r\n            if (Array.isArray(response.data)) {\r\n                setPendingUsers(response.data);\r\n            } else {\r\n                console.error(\"Received non-array data for pending users:\", response.data);\r\n                setError(\"Received invalid data format from server.\");\r\n                setPendingUsers([]);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching pending users:\", err);\r\n            if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n                setError(\"Access Denied. Ensure you are logged in as Admin.\");\r\n            } else {\r\n                 setError(err.response?.data?.message || err.message || 'Failed to fetch pending registrations.');\r\n            }\r\n            setPendingUsers([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []); // useCallback dependency array is empty\r\n\r\n    // Fetch users when component first loads\r\n    useEffect(() => {\r\n        fetchPendingUsers();\r\n    }, [fetchPendingUsers]);\r\n\r\n    // --- Snackbar Handler ---\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    // --- Action Handlers (Approve/Reject) ---\r\n    const handleAction = async (actionType, customerId) => {\r\n        const endpoint = actionType === 'approve' ? `/admin/approve/${customerId}` : `/admin/reject/${customerId}`;\r\n        const confirmationMessage = actionType === 'reject' ? `Are you sure you want to reject and remove user ${customerId}? This cannot be undone.` : null;\r\n\r\n        if (confirmationMessage && !window.confirm(confirmationMessage)) {\r\n            return; // User cancelled rejection\r\n        }\r\n\r\n        setActionMessage({ type: '', text: '' }); // Clear previous action message\r\n        try {\r\n            // POST request to the backend action endpoint\r\n            const response = await axios.post(`${API_BASE_URL}${endpoint}`, null, {\r\n                 withCredentials: true\r\n            });\r\n            setActionMessage({ type: 'success', text: response.data || `User ${customerId} ${actionType}d successfully!` });\r\n            setSnackbarOpen(true);\r\n            fetchPendingUsers(); // Refresh the list after action\r\n        } catch (err) {\r\n            console.error(`Error ${actionType}ing user ${customerId}:`, err);\r\n            const errorMsg = err.response?.data?.message || err.message || `Failed to ${actionType} user ${customerId}.`;\r\n            setActionMessage({ type: 'error', text: errorMsg });\r\n            setSnackbarOpen(true);\r\n        }\r\n    };\r\n\r\n    // --- Render Logic ---\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            {/* Dashboard Header */}\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 }, mb: 3 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n                    Admin Dashboard\r\n                </Typography>\r\n            </Paper>\r\n\r\n            {/* Pending Approvals Section */}\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 } }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Pending Registrations\r\n                    </Typography>\r\n                    <Tooltip title=\"Refresh List\">\r\n                        <span> {/* IconButton needs a parent if disabled */}\r\n                             <IconButton onClick={fetchPendingUsers} color=\"primary\" disabled={isLoading}>\r\n                                 <RefreshIcon />\r\n                             </IconButton>\r\n                        </span>\r\n                    </Tooltip>\r\n                </Box>\r\n\r\n                {/* Loading Indicator */}\r\n                {isLoading && (\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', my: 5 }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n                )}\r\n\r\n                {/* General Fetch Error Alert */}\r\n                {!isLoading && error && (\r\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n                )}\r\n\r\n                {/* Table of Pending Users */}\r\n                {!isLoading && !error && (\r\n                    <TableContainer component={Paper} elevation={1} sx={{ maxHeight: 600 }}>\r\n                        <Table stickyHeader aria-label=\"pending users table\">\r\n                            <TableHead>\r\n                                <TableRow sx={{ '& th': { fontWeight: 'bold', backgroundColor: 'primary.light', color: 'common.white' } }}>\r\n                                    <TableCell>Customer ID</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>Mobile</TableCell>\r\n                                    <TableCell>Account No</TableCell>\r\n                                    <TableCell align=\"center\">Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {pendingUsers.length === 0 ? (\r\n                                     <TableRow>\r\n                                         <TableCell colSpan={6} align=\"center\" sx={{ py: 3 }}>No pending registrations found.</TableCell>\r\n                                     </TableRow>\r\n                                ) : (\r\n                                    pendingUsers.map((user) => (\r\n                                        <TableRow hover key={user.customerId}>\r\n                                            <TableCell component=\"th\" scope=\"row\">{user.customerId}</TableCell>\r\n                                            <TableCell>{`${user.fname || ''} ${user.lname || ''}`.trim()}</TableCell>\r\n                                            <TableCell>{user.email}</TableCell>\r\n                                            <TableCell>{user.mobileNumber}</TableCell>\r\n                                            <TableCell>{user.accountNumber}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {/* Approve Button */}\r\n                                                <Tooltip title=\"Approve User\">\r\n                                                    <IconButton\r\n                                                        color=\"success\"\r\n                                                        size=\"small\"\r\n                                                        onClick={() => handleAction('approve', user.customerId)}\r\n                                                        sx={{ mr: 0.5 }}\r\n                                                    >\r\n                                                        <CheckCircleIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                {/* Reject Button */}\r\n                                                 <Tooltip title=\"Reject User\">\r\n                                                    <IconButton\r\n                                                        color=\"error\"\r\n                                                        size=\"small\"\r\n                                                        onClick={() => handleAction('reject', user.customerId)}\r\n                                                    >\r\n                                                        <CancelIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </Paper>\r\n\r\n            {/* Snackbar for Action Success/Error Messages */}\r\n             <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={5000} // Display for 5 seconds\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n             >\r\n                {/* Render Alert inside Snackbar for consistent styling */}\r\n                <Alert onClose={handleSnackbarClose} severity={actionMessage.type || 'info'} sx={{ width: '100%' }} variant=\"filled\">\r\n                    {actionMessage.text}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n             {/* You can add Grid items here linking to other future admin pages */}\r\n             {/* <Grid container spacing={3} sx={{ mt: 3}}> ... </Grid> */}\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}