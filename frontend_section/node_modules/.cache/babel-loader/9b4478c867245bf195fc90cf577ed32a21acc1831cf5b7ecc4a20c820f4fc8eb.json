{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\pages\\\\CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerDashboard() {\n  _s();\n  const [customer, setCustomer] = useState(null);\n\n  // Fetch customer details on page load\n  useEffect(() => {\n    // Assuming you have an API endpoint that fetches customer details by their ID\n    const fetchCustomerDetails = async () => {\n      try {\n        // Replace with your backend API URL\n        const response = await axios.get('http://localhost:8080/customer/1'); // Assuming 1 is the logged-in customer ID\n        setCustomer(response.data);\n      } catch (error) {\n        console.error(\"Error fetching customer data:\", error);\n      }\n    };\n    fetchCustomerDetails();\n  }, []); // Empty dependency array means it will run once when the component loads\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Welcome to Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), customer ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 mt-3 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Customer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this), \" \", customer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this), \" \", customer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), \" \", customer.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mt-3\",\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: customer.transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [transaction.description, \" - $\", transaction.amount, \" on \", transaction.date]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading customer data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerDashboard, \"dDWk+HgV9Ow4O90lP94EvHsbsnY=\");\n_c = CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CustomerDashboard","_s","customer","setCustomer","fetchCustomerDetails","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","phone","transactions","map","transaction","index","description","amount","date","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/pages/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CustomerDashboard() {\r\n  const [customer, setCustomer] = useState(null);\r\n\r\n  // Fetch customer details on page load\r\n  useEffect(() => {\r\n    // Assuming you have an API endpoint that fetches customer details by their ID\r\n    const fetchCustomerDetails = async () => {\r\n      try {\r\n        // Replace with your backend API URL\r\n        const response = await axios.get('http://localhost:8080/customer/1');  // Assuming 1 is the logged-in customer ID\r\n        setCustomer(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching customer data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCustomerDetails();\r\n  }, []);  // Empty dependency array means it will run once when the component loads\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"text-center\">Welcome to Customer Dashboard</h2>\r\n      {customer ? (\r\n        <div className=\"card p-4 mt-3 shadow\">\r\n          <h4>Customer Details</h4>\r\n          <p><strong>Name:</strong> {customer.name}</p>\r\n          <p><strong>Email:</strong> {customer.email}</p>\r\n          <p><strong>Phone:</strong> {customer.phone}</p>\r\n          {/* You can display other customer details here */}\r\n          \r\n          <h5 className=\"mt-3\">Recent Transactions</h5>\r\n          <ul>\r\n            {customer.transactions.map((transaction, index) => (\r\n              <li key={index}>\r\n                {transaction.description} - ${transaction.amount} on {transaction.date}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>Loading customer data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}