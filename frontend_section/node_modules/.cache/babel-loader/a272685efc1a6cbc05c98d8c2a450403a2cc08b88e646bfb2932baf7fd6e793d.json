{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// --- src/App.js ---\nimport React from 'react'; // Keep React import\nimport { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom'; // Keep needed imports\nimport { useAuth } from './context/AuthContext'; // <<< Import useAuth hook\n\n// Common Components\nimport Navbar from './component/common/Navbar.js';\n\n// Page Components (ADJUST PATHS AND NAMES TO MATCH YOUR ACTUAL FILES)\nimport HomePage from './component/pages/Home'; // Assuming Home.js is here\nimport LoginPage from './component/Page/Customer_Dash'; // Using your existing component name\nimport RegistrationPage from './component/Page/Registration'; // Using your existing component name\n\n// Customer Pages (Protected)\nimport Header from './component/Page/Header'; // Customer dashboard\nimport DepositPage from './component/Page/Deposit';\nimport WithdrawPage from './component/Page/Withdraw';\nimport TransferPage from './component/Page/TransferMoney';\nimport CheckBalancePage from './component/Page/CheckBalance';\n\n// Admin Pages (Protected) - **MAKE SURE THESE PATHS ARE CORRECT**\nimport AdminDashboardPage from './component/Page/Admin/AdminDashboardPage'; // Verify this path/filename\n// import PendingApprovalsPage from './component/Page/Admin/PendingApprovalsPage'; // Verify this path/filename (corrected typo 'Approvasl')\n\n// Employee Pages (Example - Placeholder)\nimport Employee_Dash from './component/Page/Employee_Dash'; // Placeholder\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // Keep your App.css if needed\n\n// --- Correct ProtectedRoute Component (Defined ONCE, outside App) ---\n// Checks for login status and allowed roles using AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const {\n    authState\n  } = useAuth(); // Get auth state from context\n\n  console.log(\"ProtectedRoute Check:\", {\n    isLoggedIn: authState.isLoggedIn,\n    userRole: authState.userRole,\n    allowedRoles\n  }); // Debugging\n\n  if (!authState.isLoggedIn) {\n    console.log(\"ProtectedRoute: Not logged in, redirecting to /login\");\n    // If not logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check if specific roles are required for this route\n  if (allowedRoles && allowedRoles.length > 0) {\n    // Check if the user's role is included in the allowed roles\n    if (!authState.userRole || !allowedRoles.includes(authState.userRole)) {\n      // Logged in, but doesn't have permission for this specific route\n      console.warn(`ProtectedRoute: Access Denied. Route requires roles [${allowedRoles.join(', ')}], user has role '${authState.userRole}'`);\n      // Redirect to an \"Unauthorized\" page\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/unauthorized\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  // If logged in AND (no specific roles required OR user has an allowed role), render the child routes\n  console.log(\"ProtectedRoute: Access Granted.\");\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this); // Outlet renders the matched nested child route\n};\n_s(ProtectedRoute, \"ToNw9tHl2DYR4fuM+DMH3fSkE+A=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nfunction App() {\n  _s2();\n  // *** REMOVE Local isLoggedIn state - Use AuthContext ONLY ***\n  // const [isLoggedIn , setIsLoggedIn] = useState(!!localStorage.getItem('jwtToken'));\n  // const [useEffect... ] block related to local isLoggedIn\n\n  const {\n    authState\n  } = useAuth(); // Get global auth state from context for conditional logic if needed (e.g., login redirect)\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\"\n        // If already logged in (based on context), redirect away from login\n        ,\n        element: authState.isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 83\n        }, this)\n        // LoginPage component uses useAuth() internally to call login() on success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegistrationPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/unauthorized\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"403 - Unauthorized Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You do not have permission to view this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 142\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_EMPLOYEE']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this),\n        children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/header\",\n          element: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/deposit\",\n          element: /*#__PURE__*/_jsxDEV(DepositPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/withdraw\",\n          element: /*#__PURE__*/_jsxDEV(WithdrawPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transfer\",\n          element: /*#__PURE__*/_jsxDEV(TransferPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/check-balance\",\n          element: /*#__PURE__*/_jsxDEV(CheckBalancePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: ['ROLE_ADMIN']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(AdminDashboardPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"404 - Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"ToNw9tHl2DYR4fuM+DMH3fSkE+A=\", false, function () {\n  return [useAuth];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Outlet","useAuth","Navbar","HomePage","LoginPage","RegistrationPage","Header","DepositPage","WithdrawPage","TransferPage","CheckBalancePage","AdminDashboardPage","Employee_Dash","jsxDEV","_jsxDEV","ProtectedRoute","allowedRoles","_s","authState","console","log","isLoggedIn","userRole","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","warn","join","_c","App","_s2","children","path","element","style","padding","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/App.js"],"sourcesContent":["// --- src/App.js ---\nimport React from 'react'; // Keep React import\nimport { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom'; // Keep needed imports\nimport { useAuth } from './context/AuthContext'; // <<< Import useAuth hook\n\n// Common Components\nimport Navbar from './component/common/Navbar.js';\n\n// Page Components (ADJUST PATHS AND NAMES TO MATCH YOUR ACTUAL FILES)\nimport HomePage from './component/pages/Home';          // Assuming Home.js is here\nimport LoginPage from './component/Page/Customer_Dash'; // Using your existing component name\nimport RegistrationPage from './component/Page/Registration'; // Using your existing component name\n\n// Customer Pages (Protected)\nimport Header from './component/Page/Header'; // Customer dashboard\nimport DepositPage from './component/Page/Deposit';\nimport WithdrawPage from './component/Page/Withdraw';\nimport TransferPage from './component/Page/TransferMoney';\nimport CheckBalancePage from './component/Page/CheckBalance';\n\n// Admin Pages (Protected) - **MAKE SURE THESE PATHS ARE CORRECT**\nimport AdminDashboardPage from './component/Page/Admin/AdminDashboardPage'; // Verify this path/filename\n// import PendingApprovalsPage from './component/Page/Admin/PendingApprovalsPage'; // Verify this path/filename (corrected typo 'Approvasl')\n\n// Employee Pages (Example - Placeholder)\nimport Employee_Dash from './component/Page/Employee_Dash'; // Placeholder\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // Keep your App.css if needed\n\n// --- Correct ProtectedRoute Component (Defined ONCE, outside App) ---\n// Checks for login status and allowed roles using AuthContext\nconst ProtectedRoute = ({ allowedRoles }) => {\n    const { authState } = useAuth(); // Get auth state from context\n\n    console.log(\"ProtectedRoute Check:\", { isLoggedIn: authState.isLoggedIn, userRole: authState.userRole, allowedRoles }); // Debugging\n\n    if (!authState.isLoggedIn) {\n        console.log(\"ProtectedRoute: Not logged in, redirecting to /login\");\n        // If not logged in, redirect to the login page\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Check if specific roles are required for this route\n    if (allowedRoles && allowedRoles.length > 0) {\n        // Check if the user's role is included in the allowed roles\n        if (!authState.userRole || !allowedRoles.includes(authState.userRole)) {\n            // Logged in, but doesn't have permission for this specific route\n            console.warn(`ProtectedRoute: Access Denied. Route requires roles [${allowedRoles.join(', ')}], user has role '${authState.userRole}'`);\n            // Redirect to an \"Unauthorized\" page\n            return <Navigate to=\"/unauthorized\" replace />;\n        }\n    }\n\n    // If logged in AND (no specific roles required OR user has an allowed role), render the child routes\n    console.log(\"ProtectedRoute: Access Granted.\");\n    return <Outlet />; // Outlet renders the matched nested child route\n};\n\n\nfunction App() {\n    // *** REMOVE Local isLoggedIn state - Use AuthContext ONLY ***\n    // const [isLoggedIn , setIsLoggedIn] = useState(!!localStorage.getItem('jwtToken'));\n    // const [useEffect... ] block related to local isLoggedIn\n\n    const { authState } = useAuth(); // Get global auth state from context for conditional logic if needed (e.g., login redirect)\n\n    return (\n        <Router>\n            {/* Navbar uses AuthContext internally */}\n            <Navbar />\n            <Routes>\n                {/* --- Public Routes --- */}\n                <Route path=\"/\" element={<HomePage />} />\n                <Route\n                    path=\"/login\"\n                    // If already logged in (based on context), redirect away from login\n                    element={authState.isLoggedIn ? <Navigate to=\"/\" replace /> : <LoginPage />}\n                    // LoginPage component uses useAuth() internally to call login() on success\n                />\n                <Route path=\"/register\" element={<RegistrationPage />} />\n                <Route path=\"/unauthorized\" element={<div style={{ padding: '20px', textAlign: 'center' }}><h2>403 - Unauthorized Access</h2><p>You do not have permission to view this page.</p></div>} />\n\n\n                {/* --- Customer Routes (Protected - requires ROLE_USER or other roles if needed) --- */}\n                {/* Parent Route applying protection */}\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_USER', 'ROLE_ADMIN', 'ROLE_EMPLOYEE']} />}> {/* Adjust roles as needed */}\n                    {/* Child routes rendered via <Outlet /> in ProtectedRoute */}\n                    <Route path=\"/header\" element={<Header />} /> {/* Assuming Header is customer dashboard */}\n                    <Route path=\"/deposit\" element={<DepositPage />} />\n                    <Route path=\"/withdraw\" element={<WithdrawPage />} />\n                    <Route path=\"/transfer\" element={<TransferPage />} />\n                    <Route path=\"/check-balance\" element={<CheckBalancePage />} />\n                    {/* Add other authenticated customer routes here */}\n                </Route>\n\n\n                {/* --- Admin Routes (Protected - requires ROLE_ADMIN) --- */}\n                 {/* Parent Route applying protection */}\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_ADMIN']} />}>\n                     {/* Child routes rendered via <Outlet /> */}\n                    <Route path=\"/admin/dashboard\" element={<AdminDashboardPage />} /> {/* <<< Correct path */}\n                    {/* <Route path=\"/admin/pending\" element={<PendingApprovalsPage />} /> <<< Correct path */}\n                    {/* Add other admin routes here */}\n                </Route>\n\n\n                {/* --- Employee Routes (Example - Protected - requires ROLE_EMPLOYEE or ROLE_ADMIN) --- */}\n                 {/* Parent Route applying protection */}\n                {/*\n                <Route element={<ProtectedRoute allowedRoles={['ROLE_EMPLOYEE', 'ROLE_ADMIN']} />}>\n                     // Child routes rendered via <Outlet />\n                    <Route path=\"/employee/dashboard\" element={<Employee_Dash />} /> // Example using existing component\n                    // Add other employee routes\n                </Route>\n                */}\n\n\n                {/* --- REMOVE Old Public Admin/Employee Routes --- */}\n                {/* <Route path=\"/employee\" element={<Employee_Dash />} /> */}\n                {/* <Route path=\"/admin\" element={<Admin_Dash />} /> */} {/* REMOVE THIS */}\n\n\n                {/* Catch-all for 404 Not Found */}\n                <Route path=\"*\" element={<div style={{ padding: '20px', textAlign: 'center' }}><h2>404 - Page Not Found</h2></div>} />\n\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}