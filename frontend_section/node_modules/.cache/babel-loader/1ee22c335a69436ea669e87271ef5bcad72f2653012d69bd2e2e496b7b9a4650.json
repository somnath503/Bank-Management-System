{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\ApplyLoanPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Box, TextField, Button, CircularProgress, Alert, Grid, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../c'; // Adjust path if needed\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080'; // Your backend URL\n\n// Example Loan Types & Terms (Ideally fetch from backend/config)\nconst loanTypes = [\"PERSONAL\", \"HOME\", \"CAR\", \"EDUCATION\", \"BUSINESS\"];\nconst loanTerms = [6, 12, 18, 24, 36, 48, 60, 72, 84, 96, 108, 120]; // In months\nconst employmentStatuses = [\"Salaried\", \"Self-Employed\", \"Business Owner\", \"Student\", \"Retired\", \"Unemployed\", \"Other\"];\nexport default function ApplyLoanPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    authState\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    loanType: '',\n    requestedAmount: '',\n    termInMonths: '',\n    purpose: '',\n    monthlyIncome: '',\n    employmentStatus: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [feedback, setFeedback] = useState({\n    type: '',\n    message: ''\n  });\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setFeedback({\n      type: '',\n      message: ''\n    }); // Clear feedback on any input change\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setFeedback({\n      type: '',\n      message: ''\n    });\n\n    // --- Frontend Validation ---\n    let validationError = '';\n    if (!formData.loanType) validationError = 'Loan Type is required.';else if (!formData.requestedAmount) validationError = 'Requested Amount is required.';else if (!formData.termInMonths) validationError = 'Repayment Term is required.';else if (!formData.purpose) validationError = 'Purpose of Loan is required.';\n    const requestedAmt = parseFloat(formData.requestedAmount);\n    if (!validationError && (isNaN(requestedAmt) || requestedAmt <= 0)) {\n      validationError = 'Requested amount must be a positive number.';\n    } else if (!validationError && requestedAmt < 1000) {\n      // Example minimum\n      validationError = 'Minimum loan amount is â‚¹1,000.';\n    }\n    const income = formData.monthlyIncome ? parseFloat(formData.monthlyIncome) : null;\n    if (!validationError && income !== null && (isNaN(income) || income < 0)) {\n      validationError = 'Monthly income, if entered, must be zero or positive.';\n    }\n    if (validationError) {\n      setFeedback({\n        type: 'error',\n        message: validationError\n      });\n      setIsLoading(false);\n      return;\n    }\n    // --- End Validation ---\n\n    try {\n      var _response$data;\n      // Prepare data for backend, ensuring numbers are parsed correctly\n      const dataToSend = {\n        loanType: formData.loanType,\n        requestedAmount: requestedAmt,\n        termInMonths: parseInt(formData.termInMonths, 10),\n        purpose: formData.purpose,\n        monthlyIncome: income,\n        // Send parsed number or null\n        employmentStatus: formData.employmentStatus\n      };\n\n      // API Call\n      const response = await axios.post(`${API_BASE_URL}/loan/apply`, dataToSend, {\n        withCredentials: true\n      } // Send auth cookies\n      );\n\n      // Handle Success\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        setFeedback({\n          type: 'success',\n          message: response.data.message || 'Loan application submitted successfully! Awaiting review.'\n        });\n        // Clear form\n        setFormData({\n          loanType: '',\n          requestedAmount: '',\n          termInMonths: '',\n          purpose: '',\n          monthlyIncome: '',\n          employmentStatus: ''\n        });\n        // Redirect after a short delay\n        setTimeout(() => navigate('/my-loans'), 2500);\n      } else {\n        var _response$data2;\n        // Handle backend indicating failure {success: false, message: '...'}\n        throw new Error(((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message) || 'Failed to submit loan application. Unknown server response.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // Handle API errors (network, server error status codes)\n      console.error(\"Loan Application submission error:\", err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message // Check for message in error response body\n      ) || err.message // General axios/network error message\n      || 'An unexpected error occurred during submission.';\n      setFeedback({\n        type: 'error',\n        message: errorMsg\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Check if user is logged in\n  if (!authState.isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          children: \"Please log in to apply for a Loan.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Render the form\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 4\n        },\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Apply for Loan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 72\n          }, this),\n          onClick: () => navigate('/header'),\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), feedback.message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: feedback.type || 'info',\n        sx: {\n          mb: 2\n        },\n        variant: \"outlined\",\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: !formData.loanType && feedback.type === 'error',\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"loan-type-label\",\n                children: \"Loan Type *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"loan-type-label\",\n                id: \"loanType\",\n                name: \"loanType\",\n                value: formData.loanType,\n                label: \"Loan Type *\",\n                onChange: handleChange,\n                disabled: isLoading,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Select Loan Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), loanTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 60\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Requested Amount (\\u20B9) *\",\n              id: \"requestedAmount\",\n              name: \"requestedAmount\",\n              type: \"number\",\n              value: formData.requestedAmount,\n              onChange: handleChange,\n              fullWidth: true,\n              required: true,\n              disabled: isLoading,\n              error: (!formData.requestedAmount || parseFloat(formData.requestedAmount) <= 0) && feedback.type === 'error',\n              inputProps: {\n                min: \"1000\"\n              } // Example minimum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: !formData.termInMonths && feedback.type === 'error',\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"term-label\",\n                children: \"Repayment Term *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"term-label\",\n                id: \"termInMonths\",\n                name: \"termInMonths\",\n                value: formData.termInMonths,\n                label: \"Repayment Term *\",\n                onChange: handleChange,\n                disabled: isLoading,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Select Term (Months)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 38\n                }, this), loanTerms.map(term => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: term,\n                  children: [term, \" Months\"]\n                }, term, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 60\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"employment-label\",\n                children: \"Employment Status (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"employment-label\",\n                id: \"employmentStatus\",\n                name: \"employmentStatus\",\n                value: formData.employmentStatus,\n                label: \"Employment Status (Optional)\",\n                onChange: handleChange,\n                disabled: isLoading,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Select Status (Optional)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 38\n                }, this), employmentStatuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status,\n                  children: status\n                }, status, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 71\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Approx. Monthly Income (\\u20B9, Optional)\",\n              id: \"monthlyIncome\",\n              name: \"monthlyIncome\",\n              type: \"number\",\n              value: formData.monthlyIncome,\n              onChange: handleChange,\n              fullWidth: true,\n              disabled: isLoading,\n              inputProps: {\n                min: \"0\"\n              },\n              error: formData.monthlyIncome && parseFloat(formData.monthlyIncome) < 0 && feedback.type === 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Purpose of Loan *\",\n              id: \"purpose\",\n              name: \"purpose\",\n              value: formData.purpose,\n              onChange: handleChange,\n              fullWidth: true,\n              required: true,\n              disabled: isLoading,\n              multiline: true,\n              rows: 4 // Make purpose field larger\n              ,\n              placeholder: \"Briefly describe why you need the loan (e.g., home renovation, car purchase, medical expenses)...\",\n              error: !formData.purpose && feedback.type === 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center'\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mt: 2,\n                px: 5\n              } // Padding and margin\n              ,\n              disabled: isLoading,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 46\n              }, this) : 'Submit Loan Application'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(ApplyLoanPage, \"RmX8bvYyzO3UuG+c6CjXOW3H+5A=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ApplyLoanPage;\nvar _c;\n$RefreshReg$(_c, \"ApplyLoanPage\");","map":{"version":3,"names":["React","useState","axios","Container","Paper","Typography","Box","TextField","Button","CircularProgress","Alert","Grid","MenuItem","Select","InputLabel","FormControl","useNavigate","useAuth","ArrowBackIcon","jsxDEV","_jsxDEV","API_BASE_URL","loanTypes","loanTerms","employmentStatuses","ApplyLoanPage","_s","navigate","authState","formData","setFormData","loanType","requestedAmount","termInMonths","purpose","monthlyIncome","employmentStatus","isLoading","setIsLoading","feedback","setFeedback","type","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","validationError","requestedAmt","parseFloat","isNaN","income","_response$data","dataToSend","parseInt","response","post","withCredentials","data","success","setTimeout","_response$data2","Error","err","_err$response","_err$response$data","console","error","errorMsg","isLoggedIn","maxWidth","sx","mt","children","elevation","p","textAlign","severity","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","mb","xs","sm","borderRadius","display","justifyContent","alignItems","component","fontWeight","size","startIcon","onSubmit","noValidate","container","spacing","item","fullWidth","required","id","labelId","label","onChange","disabled","map","inputProps","min","term","status","multiline","rows","placeholder","px","color","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/ApplyLoanPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Container, Paper, Typography, Box, TextField, Button, CircularProgress, Alert, Grid, MenuItem, Select, InputLabel, FormControl\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../c'; // Adjust path if needed\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080'; // Your backend URL\r\n\r\n// Example Loan Types & Terms (Ideally fetch from backend/config)\r\nconst loanTypes = [\"PERSONAL\", \"HOME\", \"CAR\", \"EDUCATION\", \"BUSINESS\"];\r\nconst loanTerms = [6, 12, 18, 24, 36, 48, 60, 72, 84, 96, 108, 120]; // In months\r\nconst employmentStatuses = [\"Salaried\", \"Self-Employed\", \"Business Owner\", \"Student\", \"Retired\", \"Unemployed\", \"Other\"];\r\n\r\nexport default function ApplyLoanPage() {\r\n    const navigate = useNavigate();\r\n    const { authState } = useAuth();\r\n    const [formData, setFormData] = useState({\r\n        loanType: '',\r\n        requestedAmount: '',\r\n        termInMonths: '',\r\n        purpose: '',\r\n        monthlyIncome: '',\r\n        employmentStatus: ''\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [feedback, setFeedback] = useState({ type: '', message: '' });\r\n\r\n    // Handle input changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n        setFeedback({ type: '', message: '' }); // Clear feedback on any input change\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setFeedback({ type: '', message: '' });\r\n\r\n        // --- Frontend Validation ---\r\n        let validationError = '';\r\n        if (!formData.loanType) validationError = 'Loan Type is required.';\r\n        else if (!formData.requestedAmount) validationError = 'Requested Amount is required.';\r\n        else if (!formData.termInMonths) validationError = 'Repayment Term is required.';\r\n        else if (!formData.purpose) validationError = 'Purpose of Loan is required.';\r\n\r\n        const requestedAmt = parseFloat(formData.requestedAmount);\r\n        if (!validationError && (isNaN(requestedAmt) || requestedAmt <= 0)) {\r\n            validationError = 'Requested amount must be a positive number.';\r\n        } else if (!validationError && requestedAmt < 1000) { // Example minimum\r\n            validationError = 'Minimum loan amount is â‚¹1,000.';\r\n        }\r\n\r\n        const income = formData.monthlyIncome ? parseFloat(formData.monthlyIncome) : null;\r\n        if (!validationError && income !== null && (isNaN(income) || income < 0)) {\r\n            validationError = 'Monthly income, if entered, must be zero or positive.';\r\n        }\r\n\r\n        if (validationError) {\r\n            setFeedback({ type: 'error', message: validationError });\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        // --- End Validation ---\r\n\r\n        try {\r\n            // Prepare data for backend, ensuring numbers are parsed correctly\r\n            const dataToSend = {\r\n                loanType: formData.loanType,\r\n                requestedAmount: requestedAmt,\r\n                termInMonths: parseInt(formData.termInMonths, 10),\r\n                purpose: formData.purpose,\r\n                monthlyIncome: income, // Send parsed number or null\r\n                employmentStatus: formData.employmentStatus,\r\n            };\r\n\r\n            // API Call\r\n            const response = await axios.post(\r\n                `${API_BASE_URL}/loan/apply`,\r\n                dataToSend,\r\n                { withCredentials: true } // Send auth cookies\r\n            );\r\n\r\n            // Handle Success\r\n            if (response.data?.success) {\r\n                setFeedback({ type: 'success', message: response.data.message || 'Loan application submitted successfully! Awaiting review.' });\r\n                // Clear form\r\n                setFormData({\r\n                    loanType: '', requestedAmount: '', termInMonths: '', purpose: '', monthlyIncome: '', employmentStatus: ''\r\n                });\r\n                // Redirect after a short delay\r\n                setTimeout(() => navigate('/my-loans'), 2500);\r\n            } else {\r\n                // Handle backend indicating failure {success: false, message: '...'}\r\n                throw new Error(response.data?.message || 'Failed to submit loan application. Unknown server response.');\r\n            }\r\n        } catch (err) {\r\n            // Handle API errors (network, server error status codes)\r\n            console.error(\"Loan Application submission error:\", err);\r\n            const errorMsg = err.response?.data?.message // Check for message in error response body\r\n                           || err.message // General axios/network error message\r\n                           || 'An unexpected error occurred during submission.';\r\n            setFeedback({ type: 'error', message: errorMsg });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Check if user is logged in\r\n    if (!authState.isLoggedIn) {\r\n         return (\r\n            <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n                <Paper elevation={3} sx={{ p: 3, textAlign: 'center' }}>\r\n                    <Alert severity=\"warning\">Please log in to apply for a Loan.</Alert>\r\n                    <Button variant=\"contained\" sx={{mt: 2}} onClick={() => navigate('/login')}>Login</Button>\r\n                </Paper>\r\n            </Container>\r\n         );\r\n    }\r\n\r\n    // Render the form\r\n    return (\r\n        <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper elevation={3} sx={{ p: { xs: 2, sm: 4 }, borderRadius: 2 }}>\r\n                {/* Header with Back Button */}\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                    <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 'bold' }}>\r\n                        Apply for Loan\r\n                    </Typography>\r\n                    <Button variant=\"outlined\" size=\"small\" startIcon={<ArrowBackIcon />} onClick={() => navigate('/header')}>\r\n                        My Account\r\n                    </Button>\r\n                </Box>\r\n\r\n                {/* Feedback Alert */}\r\n                {feedback.message && (\r\n                    <Alert severity={feedback.type || 'info'} sx={{ mb: 2 }} variant=\"outlined\">\r\n                        {feedback.message}\r\n                    </Alert>\r\n                )}\r\n\r\n                {/* Loan Application Form */}\r\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n                    <Grid container spacing={3}> {/* Increased spacing */}\r\n                        {/* Row 1 */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth required error={!formData.loanType && feedback.type === 'error'}>\r\n                                <InputLabel id=\"loan-type-label\">Loan Type *</InputLabel>\r\n                                <Select\r\n                                    labelId=\"loan-type-label\"\r\n                                    id=\"loanType\"\r\n                                    name=\"loanType\"\r\n                                    value={formData.loanType}\r\n                                    label=\"Loan Type *\"\r\n                                    onChange={handleChange}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    <MenuItem value=\"\" disabled><em>Select Loan Type</em></MenuItem>\r\n                                    {loanTypes.map(type => <MenuItem key={type} value={type}>{type}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                             <TextField\r\n                                label=\"Requested Amount (â‚¹) *\"\r\n                                id=\"requestedAmount\"\r\n                                name=\"requestedAmount\"\r\n                                type=\"number\"\r\n                                value={formData.requestedAmount}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                required\r\n                                disabled={isLoading}\r\n                                error={(!formData.requestedAmount || parseFloat(formData.requestedAmount) <= 0) && feedback.type === 'error'}\r\n                                inputProps={{ min: \"1000\" }} // Example minimum\r\n                                />\r\n                        </Grid>\r\n\r\n                         {/* Row 2 */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth required error={!formData.termInMonths && feedback.type === 'error'}>\r\n                                <InputLabel id=\"term-label\">Repayment Term *</InputLabel>\r\n                                <Select\r\n                                    labelId=\"term-label\"\r\n                                    id=\"termInMonths\"\r\n                                    name=\"termInMonths\"\r\n                                    value={formData.termInMonths}\r\n                                    label=\"Repayment Term *\"\r\n                                    onChange={handleChange}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                     <MenuItem value=\"\" disabled><em>Select Term (Months)</em></MenuItem>\r\n                                    {loanTerms.map(term => <MenuItem key={term} value={term}>{term} Months</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                         <Grid item xs={12} sm={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"employment-label\">Employment Status (Optional)</InputLabel>\r\n                                <Select\r\n                                    labelId=\"employment-label\"\r\n                                    id=\"employmentStatus\"\r\n                                    name=\"employmentStatus\"\r\n                                    value={formData.employmentStatus}\r\n                                    label=\"Employment Status (Optional)\"\r\n                                    onChange={handleChange}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                     <MenuItem value=\"\"><em>Select Status (Optional)</em></MenuItem>\r\n                                    {employmentStatuses.map(status => <MenuItem key={status} value={status}>{status}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {/* Row 3 */}\r\n                         <Grid item xs={12}>\r\n                              <TextField\r\n                                label=\"Approx. Monthly Income (â‚¹, Optional)\"\r\n                                id=\"monthlyIncome\"\r\n                                name=\"monthlyIncome\"\r\n                                type=\"number\"\r\n                                value={formData.monthlyIncome}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                disabled={isLoading}\r\n                                inputProps={{ min: \"0\" }}\r\n                                error={(formData.monthlyIncome && parseFloat(formData.monthlyIncome) < 0) && feedback.type === 'error'}\r\n                                />\r\n                         </Grid>\r\n\r\n                        {/* Row 4 */}\r\n                         <Grid item xs={12}>\r\n                              <TextField\r\n                                label=\"Purpose of Loan *\"\r\n                                id=\"purpose\"\r\n                                name=\"purpose\"\r\n                                value={formData.purpose}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                required\r\n                                disabled={isLoading}\r\n                                multiline\r\n                                rows={4} // Make purpose field larger\r\n                                placeholder=\"Briefly describe why you need the loan (e.g., home renovation, car purchase, medical expenses)...\"\r\n                                error={!formData.purpose && feedback.type === 'error'}/>\r\n                         </Grid>\r\n\r\n                        {/* Submit Button */}\r\n                        <Grid item xs={12} sx={{ textAlign: 'center' }}> {/* Center button */}\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                sx={{ mt: 2, px: 5 }} // Padding and margin\r\n                                disabled={isLoading}\r\n                            >\r\n                                {isLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Submit Loan Application'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}