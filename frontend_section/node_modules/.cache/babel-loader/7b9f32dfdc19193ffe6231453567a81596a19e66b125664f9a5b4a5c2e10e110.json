{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somna\\\\Documents\\\\Java_Backend\\\\Banking\\\\frontend_section\\\\src\\\\component\\\\Page\\\\Admin\\\\AdminDashboardPage.js\",\n  _s = $RefreshSig$();\n// --- src/component/Page/Admin/AdminDashboardPage.js ---\n// MODIFIED: Keeps pending customer table AND adds navigation cards\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink } from 'react-router-dom'; // Import RouterLink for navigation\n\n// Import MUI components\nimport { Container, Typography, Box, Button, Paper, Grid, Card, CardContent, CardActions,\n// Added Card components\nTableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert, Snackbar, IconButton, Tooltip } from '@mui/material';\n// Import MUI Icons\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport WorkOutlineIcon from '@mui/icons-material/WorkOutline'; // For Job Applications card\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'; // For Employee Actions card\n\n// Define your backend API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8080';\nexport default function AdminDashboardPage() {\n  _s();\n  const [pendingUsers, setPendingUsers] = useState([]); // State for pending users list\n  const [isLoading, setIsLoading] = useState(false); // Loading for customer list\n  const [error, setError] = useState(''); // Error fetching customer list\n  const [actionMessage, setActionMessage] = useState({\n    type: '',\n    text: ''\n  }); // For approve/reject feedback\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // --- Function to Fetch Pending Users ---\n  const fetchPendingUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // *** Verify this endpoint matches your backend controller for pending CUSTOMERS ***\n      // It might be /admin/pending-customers if you changed it earlier\n      const response = await axios.get(`${API_BASE_URL}/admin/pending-customers`, {\n        // Or /admin/pending if not changed\n        withCredentials: true\n      });\n      if (Array.isArray(response.data)) {\n        setPendingUsers(response.data);\n      } else {\n        console.error(\"Received non-array data for pending users:\", response.data);\n        setError(\"Received invalid data format from server.\");\n        setPendingUsers([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching pending users:\", err);\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        setError(\"Access Denied. Ensure you are logged in as Admin.\");\n      } else {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to fetch pending registrations.');\n      }\n      setPendingUsers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Fetch users when component first loads\n  useEffect(() => {\n    fetchPendingUsers();\n  }, [fetchPendingUsers]);\n\n  // --- Snackbar Handler ---\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbarOpen(false);\n  };\n\n  // --- Action Handlers (Approve/Reject Customers) ---\n  const handleAction = async (actionType, customerId) => {\n    // *** Verify these endpoints match your backend controller ***\n    // Might be /admin/approve-customer/{id} and /admin/reject-customer/{id}\n    const endpoint = actionType === 'approve' ? `/admin/approve-customer/${customerId}` : `/admin/reject-customer/${customerId}`; // Or /admin/approve & /admin/reject\n    const confirmationMessage = actionType === 'reject' ? `Are you sure you want to reject and remove user ${customerId}? This cannot be undone.` : null;\n    if (confirmationMessage && !window.confirm(confirmationMessage)) {\n      return; // User cancelled rejection\n    }\n    setActionMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const response = await axios.post(`${API_BASE_URL}${endpoint}`, null, {\n        withCredentials: true\n      });\n      setActionMessage({\n        type: 'success',\n        text: response.data || `User ${customerId} ${actionType}d successfully!`\n      });\n      setSnackbarOpen(true);\n      fetchPendingUsers(); // Refresh the list after action\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3;\n      console.error(`Error ${actionType}ing user ${customerId}:`, err);\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message || `Failed to ${actionType} user ${customerId}.`;\n      setActionMessage({\n        type: 'error',\n        text: errorMsg\n      });\n      setSnackbarOpen(true);\n    }\n  };\n\n  // --- Render Logic ---\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        },\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"Manage pending customer registrations and access other administrative areas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: {\n              xs: 2,\n              md: 3\n            },\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: \"Pending Customer Registrations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Refresh List\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: fetchPendingUsers,\n                  color: \"primary\",\n                  disabled: isLoading,\n                  children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              my: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mb: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            variant: \"outlined\",\n            sx: {\n              maxHeight: 600\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n              stickyHeader: true,\n              \"aria-label\": \"pending users table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    '& th': {\n                      fontWeight: 'bold',\n                      backgroundColor: 'grey.100'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Mobile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: pendingUsers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 5,\n                    align: \"center\",\n                    sx: {\n                      py: 3\n                    },\n                    children: \"No pending registrations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 45\n                }, this) : pendingUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  sx: {\n                    '&:last-child td, &:last-child th': {\n                      border: 0\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontSize: '0.875rem'\n                    },\n                    children: user.customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontSize: '0.875rem'\n                    },\n                    children: `${user.fname || ''} ${user.lname || ''}`.trim()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontSize: '0.875rem'\n                    },\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontSize: '0.875rem'\n                    },\n                    children: user.mobileNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Approve User\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"success\",\n                        size: \"small\",\n                        onClick: () => handleAction('approve', user.customerId),\n                        sx: {\n                          mr: 0.5\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Reject User\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"error\",\n                        size: \"small\",\n                        onClick: () => handleAction('reject', user.customerId),\n                        children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 53\n                  }, this)]\n                }, user.customerId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          direction: \"column\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                '&:hover': {\n                  boxShadow: 4\n                },\n                transition: 'box-shadow 0.3s'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  textAlign: 'center',\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(WorkOutlineIcon, {\n                  color: \"secondary\",\n                  sx: {\n                    fontSize: 40,\n                    mb: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: \"Job Applications\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Review submitted applications.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  justifyContent: 'center',\n                  pb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: RouterLink,\n                  to: \"/admin/applications\",\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  children: \"Manage Apps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                '&:hover': {\n                  boxShadow: 4\n                },\n                transition: 'box-shadow 0.3s'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  textAlign: 'center',\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(ManageAccountsIcon, {\n                  sx: {\n                    fontSize: 40,\n                    mb: 1,\n                    color: 'success.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: \"Employee Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Access employee functions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  justifyContent: 'center',\n                  pb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: RouterLink,\n                  to: \"/employee/dashboard\",\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"success\",\n                  children: \"Go to Portal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                '&:hover': {\n                  boxShadow: 4\n                },\n                transition: 'box-shadow 0.3s'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  textAlign: 'center',\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(ManageAccountsIcon, {\n                  sx: {\n                    fontSize: 40,\n                    mb: 1,\n                    color: 'success.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: \"Customer Section\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Access employee functions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  justifyContent: 'center',\n                  pb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: RouterLink,\n                  to: \"/employee/dashboard\",\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"success\",\n                  children: \"Go to Portal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 5000,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: actionMessage.type || 'info',\n        sx: {\n          width: '100%'\n        },\n        variant: \"filled\",\n        children: actionMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboardPage, \"Bu20U/bbxyuwaqpUZsPkvgbJv14=\");\n_c = AdminDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Link","RouterLink","Container","Typography","Box","Button","Paper","Grid","Card","CardContent","CardActions","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CircularProgress","Alert","Snackbar","IconButton","Tooltip","CheckCircleIcon","CancelIcon","RefreshIcon","WorkOutlineIcon","ManageAccountsIcon","jsxDEV","_jsxDEV","API_BASE_URL","AdminDashboardPage","_s","pendingUsers","setPendingUsers","isLoading","setIsLoading","error","setError","actionMessage","setActionMessage","type","text","snackbarOpen","setSnackbarOpen","fetchPendingUsers","response","get","withCredentials","Array","isArray","data","console","err","status","_err$response","_err$response$data","message","handleSnackbarClose","event","reason","handleAction","actionType","customerId","endpoint","confirmationMessage","window","confirm","post","_err$response2","_err$response2$data","_err$response3","errorMsg","maxWidth","sx","mt","mb","children","elevation","p","xs","md","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","item","height","display","justifyContent","alignItems","title","onClick","disabled","my","severity","maxHeight","stickyHeader","fontWeight","backgroundColor","length","colSpan","py","map","user","hover","border","fontSize","fname","lname","trim","email","mobileNumber","size","mr","direction","boxShadow","transition","textAlign","pb","to","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/Users/somna/Documents/Java_Backend/Banking/frontend_section/src/component/Page/Admin/AdminDashboardPage.js"],"sourcesContent":["// --- src/component/Page/Admin/AdminDashboardPage.js ---\r\n// MODIFIED: Keeps pending customer table AND adds navigation cards\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Link as RouterLink } from 'react-router-dom'; // Import RouterLink for navigation\r\n\r\n// Import MUI components\r\nimport {\r\n    Container, Typography, Box, Button, Paper, Grid, Card, CardContent, CardActions, // Added Card components\r\n    TableContainer, Table, TableHead, TableRow, TableCell, TableBody,\r\n    CircularProgress, Alert, Snackbar, IconButton, Tooltip\r\n} from '@mui/material';\r\n// Import MUI Icons\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport WorkOutlineIcon from '@mui/icons-material/WorkOutline'; // For Job Applications card\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'; // For Employee Actions card\r\n\r\n// Define your backend API base URL\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\nexport default function AdminDashboardPage() {\r\n    const [pendingUsers, setPendingUsers] = useState([]); // State for pending users list\r\n    const [isLoading, setIsLoading] = useState(false); // Loading for customer list\r\n    const [error, setError] = useState(''); // Error fetching customer list\r\n    const [actionMessage, setActionMessage] = useState({ type: '', text: '' }); // For approve/reject feedback\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    // --- Function to Fetch Pending Users ---\r\n    const fetchPendingUsers = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            // *** Verify this endpoint matches your backend controller for pending CUSTOMERS ***\r\n            // It might be /admin/pending-customers if you changed it earlier\r\n            const response = await axios.get(`${API_BASE_URL}/admin/pending-customers`, { // Or /admin/pending if not changed\r\n                 withCredentials: true\r\n            });\r\n            if (Array.isArray(response.data)) {\r\n                setPendingUsers(response.data);\r\n            } else {\r\n                console.error(\"Received non-array data for pending users:\", response.data);\r\n                setError(\"Received invalid data format from server.\");\r\n                setPendingUsers([]);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching pending users:\", err);\r\n            if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n                setError(\"Access Denied. Ensure you are logged in as Admin.\");\r\n            } else {\r\n                 setError(err.response?.data?.message || err.message || 'Failed to fetch pending registrations.');\r\n            }\r\n            setPendingUsers([]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    // Fetch users when component first loads\r\n    useEffect(() => {\r\n        fetchPendingUsers();\r\n    }, [fetchPendingUsers]);\r\n\r\n    // --- Snackbar Handler ---\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') return;\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    // --- Action Handlers (Approve/Reject Customers) ---\r\n    const handleAction = async (actionType, customerId) => {\r\n         // *** Verify these endpoints match your backend controller ***\r\n         // Might be /admin/approve-customer/{id} and /admin/reject-customer/{id}\r\n        const endpoint = actionType === 'approve' ? `/admin/approve-customer/${customerId}` : `/admin/reject-customer/${customerId}`; // Or /admin/approve & /admin/reject\r\n        const confirmationMessage = actionType === 'reject' ? `Are you sure you want to reject and remove user ${customerId}? This cannot be undone.` : null;\r\n\r\n        if (confirmationMessage && !window.confirm(confirmationMessage)) {\r\n            return; // User cancelled rejection\r\n        }\r\n\r\n        setActionMessage({ type: '', text: '' });\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}${endpoint}`, null, {\r\n                 withCredentials: true\r\n            });\r\n            setActionMessage({ type: 'success', text: response.data || `User ${customerId} ${actionType}d successfully!` });\r\n            setSnackbarOpen(true);\r\n            fetchPendingUsers(); // Refresh the list after action\r\n        } catch (err) {\r\n            console.error(`Error ${actionType}ing user ${customerId}:`, err);\r\n            const errorMsg = err.response?.data?.message || err.response?.data || err.message || `Failed to ${actionType} user ${customerId}.`;\r\n            setActionMessage({ type: 'error', text: errorMsg });\r\n            setSnackbarOpen(true);\r\n        }\r\n    };\r\n\r\n    // --- Render Logic ---\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            {/* Dashboard Header */}\r\n            <Paper elevation={3} sx={{ p: { xs: 2, md: 3 }, mb: 3 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n                    Admin Dashboard\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Manage pending customer registrations and access other administrative areas.\r\n                </Typography>\r\n            </Paper>\r\n\r\n            {/* Main Grid Layout */}\r\n            <Grid container spacing={3}>\r\n\r\n                {/* Left Column: Pending Customer Approvals Table */}\r\n                <Grid item xs={12} md={8}> {/* Takes up 8/12 columns on medium screens and up */}\r\n                    <Paper elevation={3} sx={{ p: { xs: 2, md: 3 }, height: '100%' }}>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                Pending Customer Registrations\r\n                            </Typography>\r\n                            <Tooltip title=\"Refresh List\">\r\n                                <span> {/* IconButton needs a parent if disabled */}\r\n                                    <IconButton onClick={fetchPendingUsers} color=\"primary\" disabled={isLoading}>\r\n                                        <RefreshIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        {/* Loading Indicator */}\r\n                        {isLoading && (\r\n                            <Box sx={{ display: 'flex', justifyContent: 'center', my: 5 }}>\r\n                                <CircularProgress />\r\n                            </Box>\r\n                        )}\r\n\r\n                        {/* General Fetch Error Alert */}\r\n                        {!isLoading && error && (\r\n                            <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\r\n                        )}\r\n\r\n                        {/* Table of Pending Users */}\r\n                        {!isLoading && !error && (\r\n                            <TableContainer component={Paper} elevation={0} variant=\"outlined\" sx={{ maxHeight: 600 }}> {/* Changed elevation/variant */}\r\n                                <Table stickyHeader aria-label=\"pending users table\">\r\n                                    <TableHead>\r\n                                        {/* Consider a slightly less prominent header background */}\r\n                                        <TableRow sx={{ '& th': { fontWeight: 'bold', backgroundColor: 'grey.100' } }}>\r\n                                            <TableCell>Customer ID</TableCell>\r\n                                            <TableCell>Name</TableCell>\r\n                                            <TableCell>Email</TableCell>\r\n                                            <TableCell>Mobile</TableCell>\r\n                                            {/* <TableCell>Account No</TableCell> Removed for brevity, maybe add to detail view? */}\r\n                                            <TableCell align=\"center\">Actions</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {pendingUsers.length === 0 ? (\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={5} align=\"center\" sx={{ py: 3 }}>No pending registrations found.</TableCell>\r\n                                            </TableRow>\r\n                                        ) : (\r\n                                            pendingUsers.map((user) => (\r\n                                                <TableRow hover key={user.customerId} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                                    <TableCell sx={{fontSize: '0.875rem'}}>{user.customerId}</TableCell>\r\n                                                    <TableCell sx={{fontSize: '0.875rem'}}>{`${user.fname || ''} ${user.lname || ''}`.trim()}</TableCell>\r\n                                                    <TableCell sx={{fontSize: '0.875rem'}}>{user.email}</TableCell>\r\n                                                    <TableCell sx={{fontSize: '0.875rem'}}>{user.mobileNumber}</TableCell>\r\n                                                    {/* <TableCell>{user.accountNumber}</TableCell> */}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Tooltip title=\"Approve User\">\r\n                                                            <IconButton color=\"success\" size=\"small\" onClick={() => handleAction('approve', user.customerId)} sx={{ mr: 0.5 }}>\r\n                                                                <CheckCircleIcon fontSize=\"small\"/>\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                        <Tooltip title=\"Reject User\">\r\n                                                            <IconButton color=\"error\" size=\"small\" onClick={() => handleAction('reject', user.customerId)}>\r\n                                                                <CancelIcon fontSize=\"small\"/>\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        )}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {/* Right Column: Navigation Cards */}\r\n                <Grid item xs={12} md={4}> {/* Takes up 4/12 columns */}\r\n                    <Grid container spacing={3} direction=\"column\"> {/* Stack cards vertically */}\r\n\r\n                        {/* Card 1: Job Applications */}\r\n                         <Grid item xs={12}>\r\n                            <Card sx={{ '&:hover': { boxShadow: 4 }, transition: 'box-shadow 0.3s' }}>\r\n                                <CardContent sx={{ textAlign: 'center', p: 2 }}>\r\n                                    <WorkOutlineIcon color=\"secondary\" sx={{ fontSize: 40, mb: 1 }} />\r\n                                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                        Job Applications\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.85rem' }}>\r\n                                        Review submitted applications.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions sx={{ justifyContent: 'center', pb: 2 }}>\r\n                                    <Button component={RouterLink} to=\"/admin/applications\" size=\"small\" variant=\"contained\" color=\"secondary\">\r\n                                        Manage Apps\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                         {/* Card 2: Employee Actions Portal */}\r\n                         <Grid item xs={12}>\r\n                             <Card sx={{ '&:hover': { boxShadow: 4 }, transition: 'box-shadow 0.3s' }}>\r\n                                <CardContent sx={{ textAlign: 'center', p: 2 }}>\r\n                                    <ManageAccountsIcon sx={{ fontSize: 40, mb: 1, color: 'success.main' }} />\r\n                                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                        Employee Actions\r\n                                    </Typography>\r\n                                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.85rem' }}>\r\n                                        Access employee functions.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions sx={{ justifyContent: 'center', pb: 2 }}>\r\n                                    <Button component={RouterLink} to=\"/employee/dashboard\" size=\"small\" variant=\"contained\" color=\"success\">\r\n                                        Go to Portal\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                         {/* Card 2: Employee Actions Portal */}\r\n                         <Grid item xs={12}>\r\n                             <Card sx={{ '&:hover': { boxShadow: 4 }, transition: 'box-shadow 0.3s' }}>\r\n                                <CardContent sx={{ textAlign: 'center', p: 2 }}>\r\n                                    <ManageAccountsIcon sx={{ fontSize: 40, mb: 1, color: 'success.main' }} />\r\n                                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                        Customer Section\r\n                                    </Typography>\r\n                                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.85rem' }}>\r\n                                        Access employee functions.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions sx={{ justifyContent: 'center', pb: 2 }}>\r\n                                    <Button component={RouterLink} to=\"/employee/dashboard\" size=\"small\" variant=\"contained\" color=\"success\">\r\n                                        Go to Portal\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                        {/* Add more cards here if needed */}\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid> {/* End Main Grid Layout */}\r\n\r\n            {/* Snackbar for Action Success/Error Messages (Stays at bottom) */}\r\n             <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={5000}\r\n                onClose={handleSnackbarClose}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n             >\r\n                <Alert onClose={handleSnackbarClose} severity={actionMessage.type || 'info'} sx={{ width: '100%' }} variant=\"filled\">\r\n                    {actionMessage.text}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Container>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}